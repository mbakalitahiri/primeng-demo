{"ast":null,"code":"import _defineProperty from \"/Users/elmouhcadielbakalitahiri/dev/playground/angular/primeng-demo/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { ElementRef } from \"@angular/core\";\nimport { MessageService, ConfirmationService } from \"primeng/api\";\nimport { ProductRepository } from \"src/app/repository/product.repository\";\nimport { CustomerService } from \"src/app/services/customer.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/customer.service\";\nimport * as i2 from \"src/app/repository/product.repository\";\nconst _c0 = [\"filter\"];\nclass TableComponent {\n  ngOnInit() {\n    this.customerService.getCustomersLarge().then(customers => {\n      this.customers1 = customers;\n      this.loading = false;\n      // @ts-ignore\n      this.customers1.forEach(customer => customer.date = new Date(customer.date));\n    });\n    this.customerService.getCustomersMedium().then(customers => this.customers2 = customers);\n    this.customerService.getCustomersLarge().then(customers => this.customers3 = customers);\n    this.productService.getProductsWithOrdersSmall().then(data => this.products = data);\n    this.representatives = [{\n      name: \"Amy Elsner\",\n      image: \"amyelsner.png\"\n    }, {\n      name: \"Anna Fali\",\n      image: \"annafali.png\"\n    }, {\n      name: \"Asiya Javayant\",\n      image: \"asiyajavayant.png\"\n    }, {\n      name: \"Bernardo Dominic\",\n      image: \"bernardodominic.png\"\n    }, {\n      name: \"Elwin Sharvill\",\n      image: \"elwinsharvill.png\"\n    }, {\n      name: \"Ioni Bowcher\",\n      image: \"ionibowcher.png\"\n    }, {\n      name: \"Ivan Magalhaes\",\n      image: \"ivanmagalhaes.png\"\n    }, {\n      name: \"Onyama Limba\",\n      image: \"onyamalimba.png\"\n    }, {\n      name: \"Stephen Shaw\",\n      image: \"stephenshaw.png\"\n    }, {\n      name: \"XuXue Feng\",\n      image: \"xuxuefeng.png\"\n    }];\n    this.statuses = [{\n      label: \"Unqualified\",\n      value: \"unqualified\"\n    }, {\n      label: \"Qualified\",\n      value: \"qualified\"\n    }, {\n      label: \"New\",\n      value: \"new\"\n    }, {\n      label: \"Negotiation\",\n      value: \"negotiation\"\n    }, {\n      label: \"Renewal\",\n      value: \"renewal\"\n    }, {\n      label: \"Proposal\",\n      value: \"proposal\"\n    }];\n  }\n  constructor(customerService, productService) {\n    _defineProperty(this, \"customerService\", void 0);\n    _defineProperty(this, \"productService\", void 0);\n    _defineProperty(this, \"customers1\", []);\n    _defineProperty(this, \"customers2\", []);\n    _defineProperty(this, \"customers3\", []);\n    _defineProperty(this, \"selectedCustomers1\", []);\n    _defineProperty(this, \"selectedCustomer\", {});\n    _defineProperty(this, \"representatives\", []);\n    _defineProperty(this, \"statuses\", []);\n    _defineProperty(this, \"products\", []);\n    _defineProperty(this, \"rowGroupMetadata\", void 0);\n    _defineProperty(this, \"expandedRows\", {});\n    _defineProperty(this, \"activityValues\", [0, 100]);\n    _defineProperty(this, \"isExpanded\", false);\n    _defineProperty(this, \"idFrozen\", false);\n    _defineProperty(this, \"loading\", true);\n    _defineProperty(this, \"filter\", void 0);\n    this.customerService = customerService;\n    this.productService = productService;\n  }\n}\n_defineProperty(TableComponent, \"\\u0275fac\", function TableComponent_Factory(t) {\n  return new (t || TableComponent)(i0.ɵɵdirectiveInject(i1.CustomerService), i0.ɵɵdirectiveInject(i2.ProductRepository));\n});\n_defineProperty(TableComponent, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TableComponent,\n  selectors: [[\"app-table\"]],\n  viewQuery: function TableComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.filter = _t.first);\n    }\n  },\n  features: [i0.ɵɵProvidersFeature([MessageService, ConfirmationService])],\n  decls: 2,\n  vars: 0,\n  template: function TableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"table works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n}));\nexport { TableComponent };","map":{"version":3,"names":["ElementRef","MessageService","ConfirmationService","ProductRepository","CustomerService","TableComponent","ngOnInit","customerService","getCustomersLarge","then","customers","customers1","loading","forEach","customer","date","Date","getCustomersMedium","customers2","customers3","productService","getProductsWithOrdersSmall","data","products","representatives","name","image","statuses","label","value","constructor","_defineProperty","i0","ɵɵdirectiveInject","i1","i2","selectors","viewQuery","TableComponent_Query","rf","ctx","decls","vars","template","TableComponent_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["/Users/elmouhcadielbakalitahiri/dev/playground/angular/primeng-demo/src/app/shared/table/table.component.ts","/Users/elmouhcadielbakalitahiri/dev/playground/angular/primeng-demo/src/app/shared/table/table.component.html"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\"\nimport { MessageService, ConfirmationService } from \"primeng/api\"\nimport { Customer, Representative } from \"src/app/domain/customer\"\nimport { Product } from \"src/app/domain/product.model\"\nimport { ProductRepository } from \"src/app/repository/product.repository\"\nimport { CustomerService } from \"src/app/services/customer.service\"\n\ninterface expandedRows {\n  [key: string]: boolean\n}\n\n@Component({\n  selector: \"app-table\",\n  templateUrl: \"./table.component.html\",\n  styleUrls: [\"./table.component.scss\"],\n  providers: [MessageService, ConfirmationService],\n})\nexport class TableComponent implements OnInit {\n  customers1: Customer[] = []\n\n  customers2: Customer[] = []\n\n  customers3: Customer[] = []\n\n  selectedCustomers1: Customer[] = []\n\n  selectedCustomer: Customer = {}\n\n  representatives: Representative[] = []\n\n  statuses: any[] = []\n\n  products: Product[] = []\n\n  rowGroupMetadata: any\n\n  expandedRows: expandedRows = {}\n\n  activityValues: number[] = [0, 100]\n\n  isExpanded: boolean = false\n\n  idFrozen: boolean = false\n\n  loading: boolean = true\n\n  ngOnInit(): void {\n    this.customerService.getCustomersLarge().then((customers) => {\n      this.customers1 = customers\n      this.loading = false\n\n      // @ts-ignore\n      this.customers1.forEach(\n        (customer) => (customer.date = new Date(customer.date))\n      )\n    })\n    this.customerService\n      .getCustomersMedium()\n      .then((customers) => (this.customers2 = customers))\n    this.customerService\n      .getCustomersLarge()\n      .then((customers) => (this.customers3 = customers))\n    this.productService\n      .getProductsWithOrdersSmall()\n      .then((data) => (this.products = data))\n\n    this.representatives = [\n      { name: \"Amy Elsner\", image: \"amyelsner.png\" },\n      { name: \"Anna Fali\", image: \"annafali.png\" },\n      { name: \"Asiya Javayant\", image: \"asiyajavayant.png\" },\n      { name: \"Bernardo Dominic\", image: \"bernardodominic.png\" },\n      { name: \"Elwin Sharvill\", image: \"elwinsharvill.png\" },\n      { name: \"Ioni Bowcher\", image: \"ionibowcher.png\" },\n      { name: \"Ivan Magalhaes\", image: \"ivanmagalhaes.png\" },\n      { name: \"Onyama Limba\", image: \"onyamalimba.png\" },\n      { name: \"Stephen Shaw\", image: \"stephenshaw.png\" },\n      { name: \"XuXue Feng\", image: \"xuxuefeng.png\" },\n    ]\n\n    this.statuses = [\n      { label: \"Unqualified\", value: \"unqualified\" },\n      { label: \"Qualified\", value: \"qualified\" },\n      { label: \"New\", value: \"new\" },\n      { label: \"Negotiation\", value: \"negotiation\" },\n      { label: \"Renewal\", value: \"renewal\" },\n      { label: \"Proposal\", value: \"proposal\" },\n    ]\n  }\n  @ViewChild(\"filter\") filter!: ElementRef\n\n  constructor(\n    private customerService: CustomerService,\n    private productService: ProductRepository\n  ) {}\n}\n","<p>table works!</p>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}