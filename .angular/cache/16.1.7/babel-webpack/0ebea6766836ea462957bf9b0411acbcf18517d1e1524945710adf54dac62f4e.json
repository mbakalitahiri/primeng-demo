{"ast":null,"code":"import _defineProperty from \"/Users/elmouhcadielbakalitahiri/dev/playground/angular/primeng-demo/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as i0 from '@angular/core';\nimport { forwardRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Input, EventEmitter, Output, ContentChildren, NgModule } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { Subject } from 'rxjs';\nimport { ChevronDownIcon } from 'primeng/icons/chevrondown';\nimport { ChevronUpIcon } from 'primeng/icons/chevronup';\nimport { DomHandler } from 'primeng/dom';\nconst _c0 = [\"pOrganizationChartNode\", \"\"];\nfunction OrganizationChartNode_tbody_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.node.label);\n  }\n}\nfunction OrganizationChartNode_tbody_0_div_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\nfunction OrganizationChartNode_tbody_0_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, OrganizationChartNode_tbody_0_div_5_ng_container_1_Template, 1, 0, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.chart.getTemplateForNode(ctx_r2.node))(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c1, ctx_r2.node));\n  }\n}\nconst _c2 = function () {\n  return {\n    display: \"inline\"\n  };\n};\nfunction OrganizationChartNode_tbody_0_a_6_ng_container_1_ChevronDownIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ChevronDownIcon\", 11);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-node-toggler-icon\")(\"ngStyle\", i0.ɵɵpureFunction0(2, _c2));\n  }\n}\nfunction OrganizationChartNode_tbody_0_a_6_ng_container_1_ChevronUpIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ChevronUpIcon\", 11);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-node-toggler-icon\")(\"ngStyle\", i0.ɵɵpureFunction0(2, _c2));\n  }\n}\nfunction OrganizationChartNode_tbody_0_a_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, OrganizationChartNode_tbody_0_a_6_ng_container_1_ChevronDownIcon_1_Template, 1, 3, \"ChevronDownIcon\", 10);\n    i0.ɵɵtemplate(2, OrganizationChartNode_tbody_0_a_6_ng_container_1_ChevronUpIcon_2_Template, 1, 3, \"ChevronUpIcon\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.node.expanded);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r8.node.expanded);\n  }\n}\nfunction OrganizationChartNode_tbody_0_a_6_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction OrganizationChartNode_tbody_0_a_6_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, OrganizationChartNode_tbody_0_a_6_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction OrganizationChartNode_tbody_0_a_6_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtemplate(1, OrganizationChartNode_tbody_0_a_6_span_2_1_Template, 1, 0, null, 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction0(3, _c2));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r9.chart.togglerIconTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(4, _c1, ctx_r9.node.expanded));\n  }\n}\nfunction OrganizationChartNode_tbody_0_a_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 8);\n    i0.ɵɵlistener(\"click\", function OrganizationChartNode_tbody_0_a_6_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.toggleNode($event, ctx_r14.node));\n    })(\"keydown.enter\", function OrganizationChartNode_tbody_0_a_6_Template_a_keydown_enter_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.toggleNode($event, ctx_r16.node));\n    });\n    i0.ɵɵtemplate(1, OrganizationChartNode_tbody_0_a_6_ng_container_1_Template, 3, 2, \"ng-container\", 0);\n    i0.ɵɵtemplate(2, OrganizationChartNode_tbody_0_a_6_span_2_Template, 2, 6, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.chart.togglerIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.chart.togglerIconTemplate);\n  }\n}\nfunction OrganizationChartNode_tbody_0_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵelement(2, \"div\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r4.colspan);\n  }\n}\nconst _c3 = function (a0) {\n  return {\n    \"p-organizationchart-line-top\": a0\n  };\n};\nfunction OrganizationChartNode_tbody_0_ng_container_12_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtext(1, \"\\xA0\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"td\", 15);\n    i0.ɵɵtext(3, \"\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const first_r19 = ctx.first;\n    const last_r20 = ctx.last;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c3, !first_r19));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c3, !last_r20));\n  }\n}\nfunction OrganizationChartNode_tbody_0_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, OrganizationChartNode_tbody_0_ng_container_12_ng_template_1_Template, 4, 6, \"ng-template\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.node.children);\n  }\n}\nfunction OrganizationChartNode_tbody_0_td_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵelement(1, \"table\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const child_r21 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"node\", child_r21);\n  }\n}\nconst _c4 = function (a1, a2) {\n  return {\n    \"p-organizationchart-node-content\": true,\n    \"p-organizationchart-selectable-node\": a1,\n    \"p-highlight\": a2\n  };\n};\nfunction OrganizationChartNode_tbody_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tbody\")(1, \"tr\")(2, \"td\")(3, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function OrganizationChartNode_tbody_0_Template_div_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.onNodeClick($event, ctx_r22.node));\n    });\n    i0.ɵɵtemplate(4, OrganizationChartNode_tbody_0_div_4_Template, 2, 1, \"div\", 0);\n    i0.ɵɵtemplate(5, OrganizationChartNode_tbody_0_div_5_Template, 2, 4, \"div\", 0);\n    i0.ɵɵtemplate(6, OrganizationChartNode_tbody_0_a_6_Template, 3, 2, \"a\", 2);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"tr\", 3)(8, \"td\");\n    i0.ɵɵelement(9, \"div\", 4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"tr\", 3);\n    i0.ɵɵtemplate(11, OrganizationChartNode_tbody_0_ng_container_11_Template, 3, 1, \"ng-container\", 0);\n    i0.ɵɵtemplate(12, OrganizationChartNode_tbody_0_ng_container_12_Template, 2, 1, \"ng-container\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"tr\", 5);\n    i0.ɵɵtemplate(14, OrganizationChartNode_tbody_0_td_14_Template, 2, 1, \"td\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"colspan\", ctx_r0.colspan);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r0.node.styleClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(17, _c4, ctx_r0.chart.selectionMode && ctx_r0.node.selectable !== false, ctx_r0.isSelected()));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.chart.getTemplateForNode(ctx_r0.node));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.chart.getTemplateForNode(ctx_r0.node));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.leaf);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", !ctx_r0.leaf && ctx_r0.node.expanded ? \"p-organizationchart-node-visible\" : \"p-organizationchart-node-hidden\")(\"@childState\", \"in\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r0.colspan);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", !ctx_r0.leaf && ctx_r0.node.expanded ? \"p-organizationchart-node-visible\" : \"p-organizationchart-node-hidden\")(\"@childState\", \"in\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.node.children && ctx_r0.node.children.length === 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.node.children && ctx_r0.node.children.length > 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", !ctx_r0.leaf && ctx_r0.node.expanded ? \"p-organizationchart-node-visible\" : \"p-organizationchart-node-hidden\")(\"@childState\", \"in\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.node.children);\n  }\n}\nfunction OrganizationChart_table_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"table\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"node\", ctx_r0.root);\n  }\n}\nconst _c5 = function (a1) {\n  return {\n    \"p-organizationchart p-component\": true,\n    \"p-organizationchart-preservespace\": a1\n  };\n};\nclass OrganizationChartNode {\n  constructor(chart, cd) {\n    _defineProperty(this, \"cd\", void 0);\n    _defineProperty(this, \"node\", void 0);\n    _defineProperty(this, \"root\", void 0);\n    _defineProperty(this, \"first\", void 0);\n    _defineProperty(this, \"last\", void 0);\n    _defineProperty(this, \"chart\", void 0);\n    _defineProperty(this, \"subscription\", void 0);\n    this.cd = cd;\n    this.chart = chart;\n    this.subscription = this.chart.selectionSource$.subscribe(() => {\n      this.cd.markForCheck();\n    });\n  }\n  get leaf() {\n    if (this.node) {\n      return this.node.leaf == false ? false : !(this.node.children && this.node.children.length);\n    }\n  }\n  get colspan() {\n    if (this.node) {\n      return this.node.children && this.node.children.length ? this.node.children.length * 2 : null;\n    }\n  }\n  onNodeClick(event, node) {\n    this.chart.onNodeClick(event, node);\n  }\n  toggleNode(event, node) {\n    node.expanded = !node.expanded;\n    if (node.expanded) this.chart.onNodeExpand.emit({\n      originalEvent: event,\n      node: this.node\n    });else this.chart.onNodeCollapse.emit({\n      originalEvent: event,\n      node: this.node\n    });\n    event.preventDefault();\n  }\n  isSelected() {\n    return this.chart.isSelected(this.node);\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n_defineProperty(OrganizationChartNode, \"\\u0275fac\", function OrganizationChartNode_Factory(t) {\n  return new (t || OrganizationChartNode)(i0.ɵɵdirectiveInject(forwardRef(() => OrganizationChart)), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n});\n_defineProperty(OrganizationChartNode, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: OrganizationChartNode,\n  selectors: [[\"\", \"pOrganizationChartNode\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    node: \"node\",\n    root: \"root\",\n    first: \"first\",\n    last: \"last\"\n  },\n  attrs: _c0,\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [3, \"ngClass\", \"click\"], [\"tabindex\", \"0\", \"class\", \"p-node-toggler\", 3, \"click\", \"keydown.enter\", 4, \"ngIf\"], [1, \"p-organizationchart-lines\", 3, \"ngClass\"], [1, \"p-organizationchart-line-down\"], [1, \"p-organizationchart-nodes\", 3, \"ngClass\"], [\"colspan\", \"2\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"tabindex\", \"0\", 1, \"p-node-toggler\", 3, \"click\", \"keydown.enter\"], [\"class\", \"p-node-toggler-icon\", 3, \"ngStyle\", 4, \"ngIf\"], [3, \"styleClass\", \"ngStyle\", 4, \"ngIf\"], [3, \"styleClass\", \"ngStyle\"], [1, \"p-node-toggler-icon\", 3, \"ngStyle\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"p-organizationchart-line-left\", 3, \"ngClass\"], [1, \"p-organizationchart-line-right\", 3, \"ngClass\"], [\"colspan\", \"2\"], [\"pOrganizationChartNode\", \"\", 1, \"p-organizationchart-table\", 3, \"node\"]],\n  template: function OrganizationChartNode_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, OrganizationChartNode_tbody_0_Template, 15, 20, \"tbody\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.node);\n    }\n  },\n  dependencies: function () {\n    return [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, ChevronDownIcon, ChevronUpIcon, OrganizationChartNode];\n  },\n  styles: [\".p-organizationchart-table{border-spacing:0;border-collapse:separate;margin:0 auto}.p-organizationchart-table>tbody>tr>td{text-align:center;vertical-align:top;padding:0 .75rem}.p-organizationchart-node-content{display:inline-block;position:relative}.p-organizationchart-node-content .p-node-toggler{position:absolute;bottom:-.75rem;margin-left:-.75rem;z-index:2;left:50%;-webkit-user-select:none;user-select:none;cursor:pointer;width:1.5rem;height:1.5rem}.p-organizationchart-node-content .p-node-toggler .p-node-toggler-icon{position:relative;top:.25rem}.p-organizationchart-line-down{margin:0 auto;height:20px;width:1px}.p-organizationchart-line-right,.p-organizationchart-line-left{border-radius:0}.p-organizationchart-selectable-node{cursor:pointer}.p-organizationchart .p-organizationchart-node-hidden{display:none}.p-organizationchart-preservespace .p-organizationchart-node-hidden{visibility:hidden;display:inherit}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('childState', [state('in', style({\n      opacity: 1\n    })), transition('void => *', [style({\n      opacity: 0\n    }), animate(150)]), transition('* => void', [animate(150, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationChartNode, [{\n    type: Component,\n    args: [{\n      selector: '[pOrganizationChartNode]',\n      template: `\n        <tbody *ngIf=\"node\">\n            <tr>\n                <td [attr.colspan]=\"colspan\">\n                    <div\n                        [class]=\"node.styleClass\"\n                        [ngClass]=\"{ 'p-organizationchart-node-content': true, 'p-organizationchart-selectable-node': chart.selectionMode && node.selectable !== false, 'p-highlight': isSelected() }\"\n                        (click)=\"onNodeClick($event, node)\"\n                    >\n                        <div *ngIf=\"!chart.getTemplateForNode(node)\">{{ node.label }}</div>\n                        <div *ngIf=\"chart.getTemplateForNode(node)\">\n                            <ng-container *ngTemplateOutlet=\"chart.getTemplateForNode(node); context: { $implicit: node }\"></ng-container>\n                        </div>\n                        <a *ngIf=\"!leaf\" tabindex=\"0\" class=\"p-node-toggler\" (click)=\"toggleNode($event, node)\" (keydown.enter)=\"toggleNode($event, node)\">\n                            <ng-container *ngIf=\"!chart.togglerIconTemplate\">\n                                <ChevronDownIcon *ngIf=\"node.expanded\" [styleClass]=\"'p-node-toggler-icon'\" [ngStyle]=\"{ display: 'inline' }\" />\n                                <ChevronUpIcon *ngIf=\"!node.expanded\" [styleClass]=\"'p-node-toggler-icon'\" [ngStyle]=\"{ display: 'inline' }\" />\n                            </ng-container>\n                            <span class=\"p-node-toggler-icon\" *ngIf=\"chart.togglerIconTemplate\" [ngStyle]=\"{ display: 'inline' }\">\n                                <ng-template *ngTemplateOutlet=\"chart.togglerIconTemplate; context: { $implicit: node.expanded }\"></ng-template>\n                            </span>\n                        </a>\n                    </div>\n                </td>\n            </tr>\n            <tr [ngClass]=\"!leaf && node.expanded ? 'p-organizationchart-node-visible' : 'p-organizationchart-node-hidden'\" class=\"p-organizationchart-lines\" [@childState]=\"'in'\">\n                <td [attr.colspan]=\"colspan\">\n                    <div class=\"p-organizationchart-line-down\"></div>\n                </td>\n            </tr>\n            <tr [ngClass]=\"!leaf && node.expanded ? 'p-organizationchart-node-visible' : 'p-organizationchart-node-hidden'\" class=\"p-organizationchart-lines\" [@childState]=\"'in'\">\n                <ng-container *ngIf=\"node.children && node.children.length === 1\">\n                    <td [attr.colspan]=\"colspan\">\n                        <div class=\"p-organizationchart-line-down\"></div>\n                    </td>\n                </ng-container>\n                <ng-container *ngIf=\"node.children && node.children.length > 1\">\n                    <ng-template ngFor let-child [ngForOf]=\"node.children\" let-first=\"first\" let-last=\"last\">\n                        <td class=\"p-organizationchart-line-left\" [ngClass]=\"{ 'p-organizationchart-line-top': !first }\">&nbsp;</td>\n                        <td class=\"p-organizationchart-line-right\" [ngClass]=\"{ 'p-organizationchart-line-top': !last }\">&nbsp;</td>\n                    </ng-template>\n                </ng-container>\n            </tr>\n            <tr [ngClass]=\"!leaf && node.expanded ? 'p-organizationchart-node-visible' : 'p-organizationchart-node-hidden'\" class=\"p-organizationchart-nodes\" [@childState]=\"'in'\">\n                <td *ngFor=\"let child of node.children\" colspan=\"2\">\n                    <table class=\"p-organizationchart-table\" pOrganizationChartNode [node]=\"child\"></table>\n                </td>\n            </tr>\n        </tbody>\n    `,\n      animations: [trigger('childState', [state('in', style({\n        opacity: 1\n      })), transition('void => *', [style({\n        opacity: 0\n      }), animate(150)]), transition('* => void', [animate(150, style({\n        opacity: 0\n      }))])])],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        class: 'p-element'\n      },\n      styles: [\".p-organizationchart-table{border-spacing:0;border-collapse:separate;margin:0 auto}.p-organizationchart-table>tbody>tr>td{text-align:center;vertical-align:top;padding:0 .75rem}.p-organizationchart-node-content{display:inline-block;position:relative}.p-organizationchart-node-content .p-node-toggler{position:absolute;bottom:-.75rem;margin-left:-.75rem;z-index:2;left:50%;-webkit-user-select:none;user-select:none;cursor:pointer;width:1.5rem;height:1.5rem}.p-organizationchart-node-content .p-node-toggler .p-node-toggler-icon{position:relative;top:.25rem}.p-organizationchart-line-down{margin:0 auto;height:20px;width:1px}.p-organizationchart-line-right,.p-organizationchart-line-left{border-radius:0}.p-organizationchart-selectable-node{cursor:pointer}.p-organizationchart .p-organizationchart-node-hidden{display:none}.p-organizationchart-preservespace .p-organizationchart-node-hidden{visibility:hidden;display:inherit}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: OrganizationChart,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => OrganizationChart)]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    node: [{\n      type: Input\n    }],\n    root: [{\n      type: Input\n    }],\n    first: [{\n      type: Input\n    }],\n    last: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * OrganizationChart visualizes hierarchical organization data.\n * @group Components\n */\nclass OrganizationChart {\n  /**\n   * A single treenode instance or an array to refer to the selections.\n   * @group Props\n   */\n  get selection() {\n    return this._selection;\n  }\n  set selection(val) {\n    this._selection = val;\n    if (this.initialized) this.selectionSource.next(null);\n  }\n  /**\n   * Callback to invoke on selection change.\n   * @param {*} any - selected value.\n   * @group Emits\n   */\n\n  constructor(el, cd) {\n    _defineProperty(this, \"el\", void 0);\n    _defineProperty(this, \"cd\", void 0);\n    /**\n     * An array of nested TreeNodes.\n     * @group Props\n     */\n    _defineProperty(this, \"value\", void 0);\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    _defineProperty(this, \"style\", void 0);\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    _defineProperty(this, \"styleClass\", void 0);\n    /**\n     * Defines the selection mode.\n     * @group Props\n     */\n    _defineProperty(this, \"selectionMode\", void 0);\n    /**\n     * Whether the space allocated by a node is preserved when hidden.\n     * @group Props\n     */\n    _defineProperty(this, \"preserveSpace\", true);\n    _defineProperty(this, \"selectionChange\", new EventEmitter());\n    /**\n     * Callback to invoke when a node is selected.\n     * @param {OrganizationChartNodeSelectEvent} event - custom node select event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onNodeSelect\", new EventEmitter());\n    /**\n     * Callback to invoke when a node is unselected.\n     * @param {OrganizationChartNodeUnSelectEvent} event - custom node unselect event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onNodeUnselect\", new EventEmitter());\n    /**\n     * Callback to invoke when a node is expanded.\n     * @param {OrganizationChartNodeExpandEvent} event - custom node expand event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onNodeExpand\", new EventEmitter());\n    /**\n     * Callback to invoke when a node is collapsed.\n     * @param {OrganizationChartNodeCollapseEvent} event - custom node collapse event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onNodeCollapse\", new EventEmitter());\n    _defineProperty(this, \"templates\", void 0);\n    _defineProperty(this, \"templateMap\", void 0);\n    _defineProperty(this, \"togglerIconTemplate\", void 0);\n    _defineProperty(this, \"selectionSource\", new Subject());\n    _defineProperty(this, \"_selection\", void 0);\n    _defineProperty(this, \"initialized\", void 0);\n    _defineProperty(this, \"selectionSource$\", this.selectionSource.asObservable());\n    this.el = el;\n    this.cd = cd;\n  }\n  get root() {\n    return this.value && this.value.length ? this.value[0] : null;\n  }\n  ngAfterContentInit() {\n    if (this.templates.length) {\n      this.templateMap = {};\n    }\n    this.templates.forEach(item => {\n      if (item.getType() === 'togglericon') {\n        this.togglerIconTemplate = item.template;\n      } else {\n        this.templateMap[item.getType()] = item.template;\n      }\n    });\n    this.initialized = true;\n  }\n  getTemplateForNode(node) {\n    if (this.templateMap) return node.type ? this.templateMap[node.type] : this.templateMap['default'];else return null;\n  }\n  onNodeClick(event, node) {\n    let eventTarget = event.target;\n    if (eventTarget.className && (DomHandler.hasClass(eventTarget, 'p-node-toggler') || DomHandler.hasClass(eventTarget, 'p-node-toggler-icon'))) {\n      return;\n    } else if (this.selectionMode) {\n      if (node.selectable === false) {\n        return;\n      }\n      let index = this.findIndexInSelection(node);\n      let selected = index >= 0;\n      if (this.selectionMode === 'single') {\n        if (selected) {\n          this.selection = null;\n          this.onNodeUnselect.emit({\n            originalEvent: event,\n            node: node\n          });\n        } else {\n          this.selection = node;\n          this.onNodeSelect.emit({\n            originalEvent: event,\n            node: node\n          });\n        }\n      } else if (this.selectionMode === 'multiple') {\n        if (selected) {\n          this.selection = this.selection.filter((val, i) => i != index);\n          this.onNodeUnselect.emit({\n            originalEvent: event,\n            node: node\n          });\n        } else {\n          this.selection = [...(this.selection || []), node];\n          this.onNodeSelect.emit({\n            originalEvent: event,\n            node: node\n          });\n        }\n      }\n      this.selectionChange.emit(this.selection);\n      this.selectionSource.next(null);\n    }\n  }\n  findIndexInSelection(node) {\n    let index = -1;\n    if (this.selectionMode && this.selection) {\n      if (this.selectionMode === 'single') {\n        index = this.selection == node ? 0 : -1;\n      } else if (this.selectionMode === 'multiple') {\n        for (let i = 0; i < this.selection.length; i++) {\n          if (this.selection[i] == node) {\n            index = i;\n            break;\n          }\n        }\n      }\n    }\n    return index;\n  }\n  isSelected(node) {\n    return this.findIndexInSelection(node) != -1;\n  }\n}\n_defineProperty(OrganizationChart, \"\\u0275fac\", function OrganizationChart_Factory(t) {\n  return new (t || OrganizationChart)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n});\n_defineProperty(OrganizationChart, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: OrganizationChart,\n  selectors: [[\"p-organizationChart\"]],\n  contentQueries: function OrganizationChart_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    value: \"value\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    selectionMode: \"selectionMode\",\n    preserveSpace: \"preserveSpace\",\n    selection: \"selection\"\n  },\n  outputs: {\n    selectionChange: \"selectionChange\",\n    onNodeSelect: \"onNodeSelect\",\n    onNodeUnselect: \"onNodeUnselect\",\n    onNodeExpand: \"onNodeExpand\",\n    onNodeCollapse: \"onNodeCollapse\"\n  },\n  decls: 2,\n  vars: 7,\n  consts: [[3, \"ngStyle\", \"ngClass\"], [\"class\", \"p-organizationchart-table\", \"pOrganizationChartNode\", \"\", 3, \"node\", 4, \"ngIf\"], [\"pOrganizationChartNode\", \"\", 1, \"p-organizationchart-table\", 3, \"node\"]],\n  template: function OrganizationChart_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, OrganizationChart_table_1_Template, 1, 1, \"table\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", i0.ɵɵpureFunction1(5, _c5, ctx.preserveSpace));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.root);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgIf, i1.NgStyle, OrganizationChartNode],\n  encapsulation: 2,\n  changeDetection: 0\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationChart, [{\n    type: Component,\n    args: [{\n      selector: 'p-organizationChart',\n      template: `\n        <div [ngStyle]=\"style\" [class]=\"styleClass\" [ngClass]=\"{ 'p-organizationchart p-component': true, 'p-organizationchart-preservespace': preserveSpace }\">\n            <table class=\"p-organizationchart-table\" pOrganizationChartNode [node]=\"root\" *ngIf=\"root\"></table>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        class: 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    selectionMode: [{\n      type: Input\n    }],\n    preserveSpace: [{\n      type: Input\n    }],\n    selection: [{\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    onNodeSelect: [{\n      type: Output\n    }],\n    onNodeUnselect: [{\n      type: Output\n    }],\n    onNodeExpand: [{\n      type: Output\n    }],\n    onNodeCollapse: [{\n      type: Output\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass OrganizationChartModule {}\n_defineProperty(OrganizationChartModule, \"\\u0275fac\", function OrganizationChartModule_Factory(t) {\n  return new (t || OrganizationChartModule)();\n});\n_defineProperty(OrganizationChartModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: OrganizationChartModule\n}));\n_defineProperty(OrganizationChartModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, ChevronDownIcon, ChevronUpIcon, SharedModule, SharedModule]\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ChevronDownIcon, ChevronUpIcon, SharedModule],\n      exports: [OrganizationChart, SharedModule],\n      declarations: [OrganizationChart, OrganizationChartNode]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { OrganizationChart, OrganizationChartModule, OrganizationChartNode };","map":{"version":3,"names":["i0","forwardRef","Component","ViewEncapsulation","ChangeDetectionStrategy","Inject","Input","EventEmitter","Output","ContentChildren","NgModule","trigger","state","style","transition","animate","i1","CommonModule","PrimeTemplate","SharedModule","Subject","ChevronDownIcon","ChevronUpIcon","DomHandler","_c0","OrganizationChartNode_tbody_0_div_4_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r1","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","node","label","OrganizationChartNode_tbody_0_div_5_ng_container_1_Template","ɵɵelementContainer","_c1","a0","$implicit","OrganizationChartNode_tbody_0_div_5_Template","ɵɵtemplate","ctx_r2","ɵɵproperty","chart","getTemplateForNode","ɵɵpureFunction1","_c2","display","OrganizationChartNode_tbody_0_a_6_ng_container_1_ChevronDownIcon_1_Template","ɵɵelement","ɵɵpureFunction0","OrganizationChartNode_tbody_0_a_6_ng_container_1_ChevronUpIcon_2_Template","OrganizationChartNode_tbody_0_a_6_ng_container_1_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","ctx_r8","expanded","OrganizationChartNode_tbody_0_a_6_span_2_1_ng_template_0_Template","OrganizationChartNode_tbody_0_a_6_span_2_1_Template","OrganizationChartNode_tbody_0_a_6_span_2_Template","ctx_r9","togglerIconTemplate","OrganizationChartNode_tbody_0_a_6_Template","_r15","ɵɵgetCurrentView","ɵɵlistener","OrganizationChartNode_tbody_0_a_6_Template_a_click_0_listener","$event","ɵɵrestoreView","ctx_r14","ɵɵresetView","toggleNode","OrganizationChartNode_tbody_0_a_6_Template_a_keydown_enter_0_listener","ctx_r16","ctx_r3","OrganizationChartNode_tbody_0_ng_container_11_Template","ctx_r4","ɵɵattribute","colspan","_c3","OrganizationChartNode_tbody_0_ng_container_12_ng_template_1_Template","first_r19","first","last_r20","last","OrganizationChartNode_tbody_0_ng_container_12_Template","ctx_r5","children","OrganizationChartNode_tbody_0_td_14_Template","child_r21","_c4","a1","a2","OrganizationChartNode_tbody_0_Template","_r23","OrganizationChartNode_tbody_0_Template_div_click_3_listener","ctx_r22","onNodeClick","ctx_r0","ɵɵclassMap","styleClass","ɵɵpureFunction2","selectionMode","selectable","isSelected","leaf","length","OrganizationChart_table_1_Template","root","_c5","OrganizationChartNode","constructor","cd","_defineProperty","subscription","selectionSource$","subscribe","markForCheck","event","onNodeExpand","emit","originalEvent","onNodeCollapse","preventDefault","ngOnDestroy","unsubscribe","OrganizationChartNode_Factory","t","ɵɵdirectiveInject","OrganizationChart","ChangeDetectorRef","ɵɵdefineComponent","type","selectors","hostAttrs","inputs","attrs","decls","vars","consts","template","OrganizationChartNode_Template","dependencies","NgClass","NgForOf","NgIf","NgTemplateOutlet","NgStyle","styles","encapsulation","data","animation","opacity","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","animations","None","OnPush","host","class","decorators","selection","_selection","val","initialized","selectionSource","next","el","asObservable","value","ngAfterContentInit","templates","templateMap","forEach","item","getType","eventTarget","target","className","hasClass","index","findIndexInSelection","selected","onNodeUnselect","onNodeSelect","filter","i","selectionChange","OrganizationChart_Factory","ElementRef","contentQueries","OrganizationChart_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","preserveSpace","outputs","OrganizationChart_Template","OrganizationChartModule","OrganizationChartModule_Factory","ɵɵdefineNgModule","ɵɵdefineInjector","imports","exports","declarations"],"sources":["/Users/elmouhcadielbakalitahiri/dev/playground/angular/primeng-demo/node_modules/primeng/fesm2022/primeng-organizationchart.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { forwardRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Input, EventEmitter, Output, ContentChildren, NgModule } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { Subject } from 'rxjs';\nimport { ChevronDownIcon } from 'primeng/icons/chevrondown';\nimport { ChevronUpIcon } from 'primeng/icons/chevronup';\nimport { DomHandler } from 'primeng/dom';\n\nclass OrganizationChartNode {\n    cd;\n    node;\n    root;\n    first;\n    last;\n    chart;\n    subscription;\n    constructor(chart, cd) {\n        this.cd = cd;\n        this.chart = chart;\n        this.subscription = this.chart.selectionSource$.subscribe(() => {\n            this.cd.markForCheck();\n        });\n    }\n    get leaf() {\n        if (this.node) {\n            return this.node.leaf == false ? false : !(this.node.children && this.node.children.length);\n        }\n    }\n    get colspan() {\n        if (this.node) {\n            return this.node.children && this.node.children.length ? this.node.children.length * 2 : null;\n        }\n    }\n    onNodeClick(event, node) {\n        this.chart.onNodeClick(event, node);\n    }\n    toggleNode(event, node) {\n        node.expanded = !node.expanded;\n        if (node.expanded)\n            this.chart.onNodeExpand.emit({ originalEvent: event, node: this.node });\n        else\n            this.chart.onNodeCollapse.emit({ originalEvent: event, node: this.node });\n        event.preventDefault();\n    }\n    isSelected() {\n        return this.chart.isSelected(this.node);\n    }\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: OrganizationChartNode, deps: [{ token: forwardRef(() => OrganizationChart) }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.2\", type: OrganizationChartNode, selector: \"[pOrganizationChartNode]\", inputs: { node: \"node\", root: \"root\", first: \"first\", last: \"last\" }, host: { classAttribute: \"p-element\" }, ngImport: i0, template: `\n        <tbody *ngIf=\"node\">\n            <tr>\n                <td [attr.colspan]=\"colspan\">\n                    <div\n                        [class]=\"node.styleClass\"\n                        [ngClass]=\"{ 'p-organizationchart-node-content': true, 'p-organizationchart-selectable-node': chart.selectionMode && node.selectable !== false, 'p-highlight': isSelected() }\"\n                        (click)=\"onNodeClick($event, node)\"\n                    >\n                        <div *ngIf=\"!chart.getTemplateForNode(node)\">{{ node.label }}</div>\n                        <div *ngIf=\"chart.getTemplateForNode(node)\">\n                            <ng-container *ngTemplateOutlet=\"chart.getTemplateForNode(node); context: { $implicit: node }\"></ng-container>\n                        </div>\n                        <a *ngIf=\"!leaf\" tabindex=\"0\" class=\"p-node-toggler\" (click)=\"toggleNode($event, node)\" (keydown.enter)=\"toggleNode($event, node)\">\n                            <ng-container *ngIf=\"!chart.togglerIconTemplate\">\n                                <ChevronDownIcon *ngIf=\"node.expanded\" [styleClass]=\"'p-node-toggler-icon'\" [ngStyle]=\"{ display: 'inline' }\" />\n                                <ChevronUpIcon *ngIf=\"!node.expanded\" [styleClass]=\"'p-node-toggler-icon'\" [ngStyle]=\"{ display: 'inline' }\" />\n                            </ng-container>\n                            <span class=\"p-node-toggler-icon\" *ngIf=\"chart.togglerIconTemplate\" [ngStyle]=\"{ display: 'inline' }\">\n                                <ng-template *ngTemplateOutlet=\"chart.togglerIconTemplate; context: { $implicit: node.expanded }\"></ng-template>\n                            </span>\n                        </a>\n                    </div>\n                </td>\n            </tr>\n            <tr [ngClass]=\"!leaf && node.expanded ? 'p-organizationchart-node-visible' : 'p-organizationchart-node-hidden'\" class=\"p-organizationchart-lines\" [@childState]=\"'in'\">\n                <td [attr.colspan]=\"colspan\">\n                    <div class=\"p-organizationchart-line-down\"></div>\n                </td>\n            </tr>\n            <tr [ngClass]=\"!leaf && node.expanded ? 'p-organizationchart-node-visible' : 'p-organizationchart-node-hidden'\" class=\"p-organizationchart-lines\" [@childState]=\"'in'\">\n                <ng-container *ngIf=\"node.children && node.children.length === 1\">\n                    <td [attr.colspan]=\"colspan\">\n                        <div class=\"p-organizationchart-line-down\"></div>\n                    </td>\n                </ng-container>\n                <ng-container *ngIf=\"node.children && node.children.length > 1\">\n                    <ng-template ngFor let-child [ngForOf]=\"node.children\" let-first=\"first\" let-last=\"last\">\n                        <td class=\"p-organizationchart-line-left\" [ngClass]=\"{ 'p-organizationchart-line-top': !first }\">&nbsp;</td>\n                        <td class=\"p-organizationchart-line-right\" [ngClass]=\"{ 'p-organizationchart-line-top': !last }\">&nbsp;</td>\n                    </ng-template>\n                </ng-container>\n            </tr>\n            <tr [ngClass]=\"!leaf && node.expanded ? 'p-organizationchart-node-visible' : 'p-organizationchart-node-hidden'\" class=\"p-organizationchart-nodes\" [@childState]=\"'in'\">\n                <td *ngFor=\"let child of node.children\" colspan=\"2\">\n                    <table class=\"p-organizationchart-table\" pOrganizationChartNode [node]=\"child\"></table>\n                </td>\n            </tr>\n        </tbody>\n    `, isInline: true, styles: [\".p-organizationchart-table{border-spacing:0;border-collapse:separate;margin:0 auto}.p-organizationchart-table>tbody>tr>td{text-align:center;vertical-align:top;padding:0 .75rem}.p-organizationchart-node-content{display:inline-block;position:relative}.p-organizationchart-node-content .p-node-toggler{position:absolute;bottom:-.75rem;margin-left:-.75rem;z-index:2;left:50%;-webkit-user-select:none;user-select:none;cursor:pointer;width:1.5rem;height:1.5rem}.p-organizationchart-node-content .p-node-toggler .p-node-toggler-icon{position:relative;top:.25rem}.p-organizationchart-line-down{margin:0 auto;height:20px;width:1px}.p-organizationchart-line-right,.p-organizationchart-line-left{border-radius:0}.p-organizationchart-selectable-node{cursor:pointer}.p-organizationchart .p-organizationchart-node-hidden{display:none}.p-organizationchart-preservespace .p-organizationchart-node-hidden{visibility:hidden;display:inherit}\\n\"], dependencies: [{ kind: \"directive\", type: i0.forwardRef(function () { return i1.NgClass; }), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgForOf; }), selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgTemplateOutlet; }), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgStyle; }), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"component\", type: i0.forwardRef(function () { return ChevronDownIcon; }), selector: \"ChevronDownIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return ChevronUpIcon; }), selector: \"ChevronUpIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return OrganizationChartNode; }), selector: \"[pOrganizationChartNode]\", inputs: [\"node\", \"root\", \"first\", \"last\"] }], animations: [trigger('childState', [state('in', style({ opacity: 1 })), transition('void => *', [style({ opacity: 0 }), animate(150)]), transition('* => void', [animate(150, style({ opacity: 0 }))])])], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: OrganizationChartNode, decorators: [{\n            type: Component,\n            args: [{ selector: '[pOrganizationChartNode]', template: `\n        <tbody *ngIf=\"node\">\n            <tr>\n                <td [attr.colspan]=\"colspan\">\n                    <div\n                        [class]=\"node.styleClass\"\n                        [ngClass]=\"{ 'p-organizationchart-node-content': true, 'p-organizationchart-selectable-node': chart.selectionMode && node.selectable !== false, 'p-highlight': isSelected() }\"\n                        (click)=\"onNodeClick($event, node)\"\n                    >\n                        <div *ngIf=\"!chart.getTemplateForNode(node)\">{{ node.label }}</div>\n                        <div *ngIf=\"chart.getTemplateForNode(node)\">\n                            <ng-container *ngTemplateOutlet=\"chart.getTemplateForNode(node); context: { $implicit: node }\"></ng-container>\n                        </div>\n                        <a *ngIf=\"!leaf\" tabindex=\"0\" class=\"p-node-toggler\" (click)=\"toggleNode($event, node)\" (keydown.enter)=\"toggleNode($event, node)\">\n                            <ng-container *ngIf=\"!chart.togglerIconTemplate\">\n                                <ChevronDownIcon *ngIf=\"node.expanded\" [styleClass]=\"'p-node-toggler-icon'\" [ngStyle]=\"{ display: 'inline' }\" />\n                                <ChevronUpIcon *ngIf=\"!node.expanded\" [styleClass]=\"'p-node-toggler-icon'\" [ngStyle]=\"{ display: 'inline' }\" />\n                            </ng-container>\n                            <span class=\"p-node-toggler-icon\" *ngIf=\"chart.togglerIconTemplate\" [ngStyle]=\"{ display: 'inline' }\">\n                                <ng-template *ngTemplateOutlet=\"chart.togglerIconTemplate; context: { $implicit: node.expanded }\"></ng-template>\n                            </span>\n                        </a>\n                    </div>\n                </td>\n            </tr>\n            <tr [ngClass]=\"!leaf && node.expanded ? 'p-organizationchart-node-visible' : 'p-organizationchart-node-hidden'\" class=\"p-organizationchart-lines\" [@childState]=\"'in'\">\n                <td [attr.colspan]=\"colspan\">\n                    <div class=\"p-organizationchart-line-down\"></div>\n                </td>\n            </tr>\n            <tr [ngClass]=\"!leaf && node.expanded ? 'p-organizationchart-node-visible' : 'p-organizationchart-node-hidden'\" class=\"p-organizationchart-lines\" [@childState]=\"'in'\">\n                <ng-container *ngIf=\"node.children && node.children.length === 1\">\n                    <td [attr.colspan]=\"colspan\">\n                        <div class=\"p-organizationchart-line-down\"></div>\n                    </td>\n                </ng-container>\n                <ng-container *ngIf=\"node.children && node.children.length > 1\">\n                    <ng-template ngFor let-child [ngForOf]=\"node.children\" let-first=\"first\" let-last=\"last\">\n                        <td class=\"p-organizationchart-line-left\" [ngClass]=\"{ 'p-organizationchart-line-top': !first }\">&nbsp;</td>\n                        <td class=\"p-organizationchart-line-right\" [ngClass]=\"{ 'p-organizationchart-line-top': !last }\">&nbsp;</td>\n                    </ng-template>\n                </ng-container>\n            </tr>\n            <tr [ngClass]=\"!leaf && node.expanded ? 'p-organizationchart-node-visible' : 'p-organizationchart-node-hidden'\" class=\"p-organizationchart-nodes\" [@childState]=\"'in'\">\n                <td *ngFor=\"let child of node.children\" colspan=\"2\">\n                    <table class=\"p-organizationchart-table\" pOrganizationChartNode [node]=\"child\"></table>\n                </td>\n            </tr>\n        </tbody>\n    `, animations: [trigger('childState', [state('in', style({ opacity: 1 })), transition('void => *', [style({ opacity: 0 }), animate(150)]), transition('* => void', [animate(150, style({ opacity: 0 }))])])], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        class: 'p-element'\n                    }, styles: [\".p-organizationchart-table{border-spacing:0;border-collapse:separate;margin:0 auto}.p-organizationchart-table>tbody>tr>td{text-align:center;vertical-align:top;padding:0 .75rem}.p-organizationchart-node-content{display:inline-block;position:relative}.p-organizationchart-node-content .p-node-toggler{position:absolute;bottom:-.75rem;margin-left:-.75rem;z-index:2;left:50%;-webkit-user-select:none;user-select:none;cursor:pointer;width:1.5rem;height:1.5rem}.p-organizationchart-node-content .p-node-toggler .p-node-toggler-icon{position:relative;top:.25rem}.p-organizationchart-line-down{margin:0 auto;height:20px;width:1px}.p-organizationchart-line-right,.p-organizationchart-line-left{border-radius:0}.p-organizationchart-selectable-node{cursor:pointer}.p-organizationchart .p-organizationchart-node-hidden{display:none}.p-organizationchart-preservespace .p-organizationchart-node-hidden{visibility:hidden;display:inherit}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: OrganizationChart, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => OrganizationChart)]\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { node: [{\n                type: Input\n            }], root: [{\n                type: Input\n            }], first: [{\n                type: Input\n            }], last: [{\n                type: Input\n            }] } });\n/**\n * OrganizationChart visualizes hierarchical organization data.\n * @group Components\n */\nclass OrganizationChart {\n    el;\n    cd;\n    /**\n     * An array of nested TreeNodes.\n     * @group Props\n     */\n    value;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Defines the selection mode.\n     * @group Props\n     */\n    selectionMode;\n    /**\n     * Whether the space allocated by a node is preserved when hidden.\n     * @group Props\n     */\n    preserveSpace = true;\n    /**\n     * A single treenode instance or an array to refer to the selections.\n     * @group Props\n     */\n    get selection() {\n        return this._selection;\n    }\n    set selection(val) {\n        this._selection = val;\n        if (this.initialized)\n            this.selectionSource.next(null);\n    }\n    /**\n     * Callback to invoke on selection change.\n     * @param {*} any - selected value.\n     * @group Emits\n     */\n    selectionChange = new EventEmitter();\n    /**\n     * Callback to invoke when a node is selected.\n     * @param {OrganizationChartNodeSelectEvent} event - custom node select event.\n     * @group Emits\n     */\n    onNodeSelect = new EventEmitter();\n    /**\n     * Callback to invoke when a node is unselected.\n     * @param {OrganizationChartNodeUnSelectEvent} event - custom node unselect event.\n     * @group Emits\n     */\n    onNodeUnselect = new EventEmitter();\n    /**\n     * Callback to invoke when a node is expanded.\n     * @param {OrganizationChartNodeExpandEvent} event - custom node expand event.\n     * @group Emits\n     */\n    onNodeExpand = new EventEmitter();\n    /**\n     * Callback to invoke when a node is collapsed.\n     * @param {OrganizationChartNodeCollapseEvent} event - custom node collapse event.\n     * @group Emits\n     */\n    onNodeCollapse = new EventEmitter();\n    templates;\n    templateMap;\n    togglerIconTemplate;\n    selectionSource = new Subject();\n    _selection;\n    initialized;\n    selectionSource$ = this.selectionSource.asObservable();\n    constructor(el, cd) {\n        this.el = el;\n        this.cd = cd;\n    }\n    get root() {\n        return this.value && this.value.length ? this.value[0] : null;\n    }\n    ngAfterContentInit() {\n        if (this.templates.length) {\n            this.templateMap = {};\n        }\n        this.templates.forEach((item) => {\n            if (item.getType() === 'togglericon') {\n                this.togglerIconTemplate = item.template;\n            }\n            else {\n                this.templateMap[item.getType()] = item.template;\n            }\n        });\n        this.initialized = true;\n    }\n    getTemplateForNode(node) {\n        if (this.templateMap)\n            return node.type ? this.templateMap[node.type] : this.templateMap['default'];\n        else\n            return null;\n    }\n    onNodeClick(event, node) {\n        let eventTarget = event.target;\n        if (eventTarget.className && (DomHandler.hasClass(eventTarget, 'p-node-toggler') || DomHandler.hasClass(eventTarget, 'p-node-toggler-icon'))) {\n            return;\n        }\n        else if (this.selectionMode) {\n            if (node.selectable === false) {\n                return;\n            }\n            let index = this.findIndexInSelection(node);\n            let selected = index >= 0;\n            if (this.selectionMode === 'single') {\n                if (selected) {\n                    this.selection = null;\n                    this.onNodeUnselect.emit({ originalEvent: event, node: node });\n                }\n                else {\n                    this.selection = node;\n                    this.onNodeSelect.emit({ originalEvent: event, node: node });\n                }\n            }\n            else if (this.selectionMode === 'multiple') {\n                if (selected) {\n                    this.selection = this.selection.filter((val, i) => i != index);\n                    this.onNodeUnselect.emit({ originalEvent: event, node: node });\n                }\n                else {\n                    this.selection = [...(this.selection || []), node];\n                    this.onNodeSelect.emit({ originalEvent: event, node: node });\n                }\n            }\n            this.selectionChange.emit(this.selection);\n            this.selectionSource.next(null);\n        }\n    }\n    findIndexInSelection(node) {\n        let index = -1;\n        if (this.selectionMode && this.selection) {\n            if (this.selectionMode === 'single') {\n                index = this.selection == node ? 0 : -1;\n            }\n            else if (this.selectionMode === 'multiple') {\n                for (let i = 0; i < this.selection.length; i++) {\n                    if (this.selection[i] == node) {\n                        index = i;\n                        break;\n                    }\n                }\n            }\n        }\n        return index;\n    }\n    isSelected(node) {\n        return this.findIndexInSelection(node) != -1;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: OrganizationChart, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.2\", type: OrganizationChart, selector: \"p-organizationChart\", inputs: { value: \"value\", style: \"style\", styleClass: \"styleClass\", selectionMode: \"selectionMode\", preserveSpace: \"preserveSpace\", selection: \"selection\" }, outputs: { selectionChange: \"selectionChange\", onNodeSelect: \"onNodeSelect\", onNodeUnselect: \"onNodeUnselect\", onNodeExpand: \"onNodeExpand\", onNodeCollapse: \"onNodeCollapse\" }, host: { classAttribute: \"p-element\" }, queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], ngImport: i0, template: `\n        <div [ngStyle]=\"style\" [class]=\"styleClass\" [ngClass]=\"{ 'p-organizationchart p-component': true, 'p-organizationchart-preservespace': preserveSpace }\">\n            <table class=\"p-organizationchart-table\" pOrganizationChartNode [node]=\"root\" *ngIf=\"root\"></table>\n        </div>\n    `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"component\", type: OrganizationChartNode, selector: \"[pOrganizationChartNode]\", inputs: [\"node\", \"root\", \"first\", \"last\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: OrganizationChart, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-organizationChart',\n                    template: `\n        <div [ngStyle]=\"style\" [class]=\"styleClass\" [ngClass]=\"{ 'p-organizationchart p-component': true, 'p-organizationchart-preservespace': preserveSpace }\">\n            <table class=\"p-organizationchart-table\" pOrganizationChartNode [node]=\"root\" *ngIf=\"root\"></table>\n        </div>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        class: 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { value: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], selectionMode: [{\n                type: Input\n            }], preserveSpace: [{\n                type: Input\n            }], selection: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], onNodeSelect: [{\n                type: Output\n            }], onNodeUnselect: [{\n                type: Output\n            }], onNodeExpand: [{\n                type: Output\n            }], onNodeCollapse: [{\n                type: Output\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass OrganizationChartModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: OrganizationChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.2\", ngImport: i0, type: OrganizationChartModule, declarations: [OrganizationChart, OrganizationChartNode], imports: [CommonModule, ChevronDownIcon, ChevronUpIcon, SharedModule], exports: [OrganizationChart, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: OrganizationChartModule, imports: [CommonModule, ChevronDownIcon, ChevronUpIcon, SharedModule, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: OrganizationChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, ChevronDownIcon, ChevronUpIcon, SharedModule],\n                    exports: [OrganizationChart, SharedModule],\n                    declarations: [OrganizationChart, OrganizationChartNode]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { OrganizationChart, OrganizationChartModule, OrganizationChartNode };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}