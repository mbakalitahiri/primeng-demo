{"ast":null,"code":"import _defineProperty from \"/Users/elmouhcadielbakalitahiri/dev/playground/angular/primeng-demo/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { ProductRepository } from \"src/app/repository/product.repository\";\nimport { LayoutService } from \"src/app/services/app.layout\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/repository/product.repository\";\nimport * as i2 from \"src/app/services/app.layout\";\nclass DashboardComponent {\n  constructor(productService, layoutService) {\n    _defineProperty(this, \"productService\", void 0);\n    _defineProperty(this, \"layoutService\", void 0);\n    _defineProperty(this, \"items\", void 0);\n    _defineProperty(this, \"products\", void 0);\n    _defineProperty(this, \"chartData\", void 0);\n    _defineProperty(this, \"chartOptions\", void 0);\n    _defineProperty(this, \"subscription\", void 0);\n    this.productService = productService;\n    this.layoutService = layoutService;\n    this.subscription = this.layoutService.configUpdate$.subscribe(() => {\n      this.initChart();\n    });\n  }\n  ngOnInit() {\n    this.initChart();\n    this.productService.getProducts();\n    this.items = [{\n      label: \"Add New\",\n      icon: \"pi pi-fw pi-plus\"\n    }, {\n      label: \"Remove\",\n      icon: \"pi pi-fw pi-minus\"\n    }];\n  }\n  initChart() {\n    const documentStyle = getComputedStyle(document.documentElement);\n    const textColor = documentStyle.getPropertyValue(\"--text-color\");\n    const textColorSecondary = documentStyle.getPropertyValue(\"--text-color-secondary\");\n    const surfaceBorder = documentStyle.getPropertyValue(\"--surface-border\");\n    this.chartData = {\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n      datasets: [{\n        label: \"First Dataset\",\n        data: [65, 59, 80, 81, 56, 55, 40],\n        fill: false,\n        backgroundColor: documentStyle.getPropertyValue(\"--bluegray-700\"),\n        borderColor: documentStyle.getPropertyValue(\"--bluegray-700\"),\n        tension: 0.4\n      }, {\n        label: \"Second Dataset\",\n        data: [28, 48, 40, 19, 86, 27, 90],\n        fill: false,\n        backgroundColor: documentStyle.getPropertyValue(\"--green-600\"),\n        borderColor: documentStyle.getPropertyValue(\"--green-600\"),\n        tension: 0.4\n      }]\n    };\n    this.chartOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            color: textColor\n          }\n        }\n      },\n      scales: {\n        x: {\n          ticks: {\n            color: textColorSecondary\n          },\n          grid: {\n            color: surfaceBorder,\n            drawBorder: false\n          }\n        },\n        y: {\n          ticks: {\n            color: textColorSecondary\n          },\n          grid: {\n            color: surfaceBorder,\n            drawBorder: false\n          }\n        }\n      }\n    };\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n_defineProperty(DashboardComponent, \"\\u0275fac\", function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.ProductRepository), i0.ɵɵdirectiveInject(i2.LayoutService));\n});\n_defineProperty(DashboardComponent, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 2,\n  vars: 0,\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"dashboard works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n}));\nexport { DashboardComponent };","map":{"version":3,"names":["ProductRepository","LayoutService","DashboardComponent","constructor","productService","layoutService","_defineProperty","subscription","configUpdate$","subscribe","initChart","ngOnInit","getProducts","items","label","icon","documentStyle","getComputedStyle","document","documentElement","textColor","getPropertyValue","textColorSecondary","surfaceBorder","chartData","labels","datasets","data","fill","backgroundColor","borderColor","tension","chartOptions","plugins","legend","color","scales","x","ticks","grid","drawBorder","y","ngOnDestroy","unsubscribe","i0","ɵɵdirectiveInject","i1","i2","selectors","decls","vars","template","DashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["/Users/elmouhcadielbakalitahiri/dev/playground/angular/primeng-demo/src/app/shared/dashboard/dashboard.component.ts","/Users/elmouhcadielbakalitahiri/dev/playground/angular/primeng-demo/src/app/shared/dashboard/dashboard.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from \"@angular/core\"\nimport { MenuItem } from \"primeng/api\"\nimport { Subscription } from \"rxjs\"\nimport { Product } from \"src/app/domain/product.model\"\nimport { ProductRepository } from \"src/app/repository/product.repository\"\nimport { LayoutService } from \"src/app/services/app.layout\"\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.scss\"],\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n  items!: MenuItem[]\n\n  products!: Product[]\n\n  chartData: any\n\n  chartOptions: any\n\n  subscription!: Subscription\n\n  constructor(\n    private productService: ProductRepository,\n    public layoutService: LayoutService\n  ) {\n    this.subscription = this.layoutService.configUpdate$.subscribe(() => {\n      this.initChart()\n    })\n  }\n\n  ngOnInit() {\n    this.initChart()\n    this.productService.getProducts()\n\n    this.items = [\n      { label: \"Add New\", icon: \"pi pi-fw pi-plus\" },\n      { label: \"Remove\", icon: \"pi pi-fw pi-minus\" },\n    ]\n  }\n\n  initChart() {\n    const documentStyle = getComputedStyle(document.documentElement)\n    const textColor = documentStyle.getPropertyValue(\"--text-color\")\n    const textColorSecondary = documentStyle.getPropertyValue(\n      \"--text-color-secondary\"\n    )\n    const surfaceBorder = documentStyle.getPropertyValue(\"--surface-border\")\n\n    this.chartData = {\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n      datasets: [\n        {\n          label: \"First Dataset\",\n          data: [65, 59, 80, 81, 56, 55, 40],\n          fill: false,\n          backgroundColor: documentStyle.getPropertyValue(\"--bluegray-700\"),\n          borderColor: documentStyle.getPropertyValue(\"--bluegray-700\"),\n          tension: 0.4,\n        },\n        {\n          label: \"Second Dataset\",\n          data: [28, 48, 40, 19, 86, 27, 90],\n          fill: false,\n          backgroundColor: documentStyle.getPropertyValue(\"--green-600\"),\n          borderColor: documentStyle.getPropertyValue(\"--green-600\"),\n          tension: 0.4,\n        },\n      ],\n    }\n\n    this.chartOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            color: textColor,\n          },\n        },\n      },\n      scales: {\n        x: {\n          ticks: {\n            color: textColorSecondary,\n          },\n          grid: {\n            color: surfaceBorder,\n            drawBorder: false,\n          },\n        },\n        y: {\n          ticks: {\n            color: textColorSecondary,\n          },\n          grid: {\n            color: surfaceBorder,\n            drawBorder: false,\n          },\n        },\n      },\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe()\n    }\n  }\n}\n","<p>dashboard works!</p>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}