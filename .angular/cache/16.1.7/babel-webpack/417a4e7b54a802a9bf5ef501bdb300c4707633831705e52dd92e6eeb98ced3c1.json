{"ast":null,"code":"import _defineProperty from \"/Users/elmouhcadielbakalitahiri/dev/playground/angular/primeng-demo/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar _a;\nimport { Component } from \"@angular/core\";\nimport { LayoutService } from \"src/app/services/app.layout\";\nlet DashboardComponent = class DashboardComponent {\n  constructor(productService, layoutService) {\n    _defineProperty(this, \"productService\", void 0);\n    _defineProperty(this, \"layoutService\", void 0);\n    _defineProperty(this, \"items\", void 0);\n    _defineProperty(this, \"products\", void 0);\n    _defineProperty(this, \"chartData\", void 0);\n    _defineProperty(this, \"chartOptions\", void 0);\n    _defineProperty(this, \"subscription\", void 0);\n    this.productService = productService;\n    this.layoutService = layoutService;\n    this.subscription = this.layoutService.configUpdate$.subscribe(() => {\n      this.initChart();\n    });\n  }\n  ngOnInit() {\n    this.initChart();\n    this.productService.getProductsSmall().then(data => this.products = data);\n    this.items = [{\n      label: \"Add New\",\n      icon: \"pi pi-fw pi-plus\"\n    }, {\n      label: \"Remove\",\n      icon: \"pi pi-fw pi-minus\"\n    }];\n  }\n  initChart() {\n    const documentStyle = getComputedStyle(document.documentElement);\n    const textColor = documentStyle.getPropertyValue(\"--text-color\");\n    const textColorSecondary = documentStyle.getPropertyValue(\"--text-color-secondary\");\n    const surfaceBorder = documentStyle.getPropertyValue(\"--surface-border\");\n    this.chartData = {\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n      datasets: [{\n        label: \"First Dataset\",\n        data: [65, 59, 80, 81, 56, 55, 40],\n        fill: false,\n        backgroundColor: documentStyle.getPropertyValue(\"--bluegray-700\"),\n        borderColor: documentStyle.getPropertyValue(\"--bluegray-700\"),\n        tension: 0.4\n      }, {\n        label: \"Second Dataset\",\n        data: [28, 48, 40, 19, 86, 27, 90],\n        fill: false,\n        backgroundColor: documentStyle.getPropertyValue(\"--green-600\"),\n        borderColor: documentStyle.getPropertyValue(\"--green-600\"),\n        tension: 0.4\n      }]\n    };\n    this.chartOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            color: textColor\n          }\n        }\n      },\n      scales: {\n        x: {\n          ticks: {\n            color: textColorSecondary\n          },\n          grid: {\n            color: surfaceBorder,\n            drawBorder: false\n          }\n        },\n        y: {\n          ticks: {\n            color: textColorSecondary\n          },\n          grid: {\n            color: surfaceBorder,\n            drawBorder: false\n          }\n        }\n      }\n    };\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.scss\"]\n}), __metadata(\"design:paramtypes\", [typeof (_a = typeof ProductService !== \"undefined\" && ProductService) === \"function\" ? _a : Object, LayoutService])], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"names":["Component","LayoutService","DashboardComponent","constructor","productService","layoutService","_defineProperty","subscription","configUpdate$","subscribe","initChart","ngOnInit","getProductsSmall","then","data","products","items","label","icon","documentStyle","getComputedStyle","document","documentElement","textColor","getPropertyValue","textColorSecondary","surfaceBorder","chartData","labels","datasets","fill","backgroundColor","borderColor","tension","chartOptions","plugins","legend","color","scales","x","ticks","grid","drawBorder","y","ngOnDestroy","unsubscribe","__decorate","selector","templateUrl","styleUrls","ProductService","_a","Object"],"sources":["/Users/elmouhcadielbakalitahiri/dev/playground/angular/primeng-demo/src/app/shared/dashboard/dashboard.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from \"@angular/core\"\nimport { MenuItem } from \"primeng/api\"\nimport { Subscription } from \"rxjs\"\nimport { Product } from \"src/app/domain/product.model\"\nimport { LayoutService } from \"src/app/services/app.layout\"\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.scss\"],\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n  items!: MenuItem[]\n\n  products!: Product[]\n\n  chartData: any\n\n  chartOptions: any\n\n  subscription!: Subscription\n\n  constructor(\n    private productService: ProductService,\n    public layoutService: LayoutService\n  ) {\n    this.subscription = this.layoutService.configUpdate$.subscribe(() => {\n      this.initChart()\n    })\n  }\n\n  ngOnInit() {\n    this.initChart()\n    this.productService\n      .getProductsSmall()\n      .then((data) => (this.products = data))\n\n    this.items = [\n      { label: \"Add New\", icon: \"pi pi-fw pi-plus\" },\n      { label: \"Remove\", icon: \"pi pi-fw pi-minus\" },\n    ]\n  }\n\n  initChart() {\n    const documentStyle = getComputedStyle(document.documentElement)\n    const textColor = documentStyle.getPropertyValue(\"--text-color\")\n    const textColorSecondary = documentStyle.getPropertyValue(\n      \"--text-color-secondary\"\n    )\n    const surfaceBorder = documentStyle.getPropertyValue(\"--surface-border\")\n\n    this.chartData = {\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n      datasets: [\n        {\n          label: \"First Dataset\",\n          data: [65, 59, 80, 81, 56, 55, 40],\n          fill: false,\n          backgroundColor: documentStyle.getPropertyValue(\"--bluegray-700\"),\n          borderColor: documentStyle.getPropertyValue(\"--bluegray-700\"),\n          tension: 0.4,\n        },\n        {\n          label: \"Second Dataset\",\n          data: [28, 48, 40, 19, 86, 27, 90],\n          fill: false,\n          backgroundColor: documentStyle.getPropertyValue(\"--green-600\"),\n          borderColor: documentStyle.getPropertyValue(\"--green-600\"),\n          tension: 0.4,\n        },\n      ],\n    }\n\n    this.chartOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            color: textColor,\n          },\n        },\n      },\n      scales: {\n        x: {\n          ticks: {\n            color: textColorSecondary,\n          },\n          grid: {\n            color: surfaceBorder,\n            drawBorder: false,\n          },\n        },\n        y: {\n          ticks: {\n            color: textColorSecondary,\n          },\n          grid: {\n            color: surfaceBorder,\n            drawBorder: false,\n          },\n        },\n      },\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe()\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}