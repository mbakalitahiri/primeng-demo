{"ast":null,"code":"/*!\n * Chart.js v3.3.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as renderText, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || elapsed < duration);\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      }\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[axis][meta.index];\n  }\n}\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = me;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {\n        all: true\n      });\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {\n      keys: getSortedDatasetIndices(me.chart, true),\n      values: null\n    };\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || elements.length - start;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context || (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = arr => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || me.index === stack._top || me.index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {\n      vScale,\n      _stacked\n    } = me._cachedMeta;\n    const {\n      base: baseValue,\n      minBarLength\n    } = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    unclipArea(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {\n      data,\n      _parsed\n    } = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {\n      circumference,\n      rotation\n    } = me._getRotationExtents();\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {\n      iScale,\n      _parsed\n    } = meta;\n    const axis = iScale.axis;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {\n    start,\n    count\n  };\n}\nfunction scaleRangesChanged(meta) {\n  const {\n    xScale,\n    yScale,\n    _scaleRanges\n  } = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - radiusLength * me.index;\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\nclass PieController extends DoughnutController {}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\nclass ScatterController extends LineController {}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({\n      index,\n      data\n    } = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {\n    childList: true\n  });\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, args => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {\n  formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right\n  } = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal() ? me.width + margins.left + margins.right : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n    for (i = 0; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)), Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context || (me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {\n      grid,\n      position\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n          case 'bottom':\n            top -= height;\n            break;\n        }\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n          case 'right':\n            left -= width;\n            break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {\n      position,\n      ticks\n    } = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {\n      textAlign,\n      x\n    };\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: me.left,\n        bottom: chart.height,\n        right: me.right\n      };\n    }\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: me.top,\n        left: 0,\n        bottom: me.bottom,\n        right: chart.width\n      };\n    }\n  }\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {\n      chart,\n      ctx,\n      options: {\n        grid\n      }\n    } = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || reg === me.plugins && arg.id) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n  for (const prop of names) {\n    if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n      return true;\n    }\n  }\n  return false;\n}\nvar version = \"3.3.2\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, scale => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {\n      mode\n    });\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({\n        chart: me\n      });\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {\n      chart: this,\n      type: 'chart'\n    });\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {\n      visible\n    });\n    me.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {\n      canvas,\n      ctx\n    } = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function (e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, type => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {\n      event: e,\n      replay,\n      cancelable: true\n    };\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {\n      _active: lastActive = [],\n      options\n    } = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\nfunction pathArc(ctx, element, offset, end) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + offset + pixelMargin : 0;\n  const alpha = end - start;\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset;\n  const endAngle = end - angleOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {\n    x,\n    y,\n    startAngle,\n    pixelMargin,\n    fullCircles\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, endAngle) {\n  const {\n    options\n  } = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = distance >= innerRadius && distance <= outerRadius;\n    return betweenAngles && withinRadius;\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {\n      options,\n      circumference\n    } = me;\n    const offset = (options.offset || 0) / 2;\n    me.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset);\n    drawBorder(ctx, me, radiusOffset, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {\n      property,\n      start: value,\n      end: value\n    });\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || me.points.length - start;\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n};\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal ? parseEdge(edge, 'left', 'right', bar.base > bar.x) : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start,\n    count\n  };\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(segment => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {\n    chart,\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\nconst isLineAndNotInHideAnimation = meta => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first,\n    last,\n    point\n  };\n}\nfunction getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property,\n    start,\n    end\n  };\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n  const segments = _segments(line, target, property);\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {\n      move: lineLoop,\n      reverse: true\n    });\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {\n      options,\n      ctx\n    } = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {\n        left,\n        top,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = me;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      color: fontColor,\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + fontSize / 2 + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context || (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {\n        chart: me._chart,\n        tooltip: me,\n        replay\n      });\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      cornerRadius,\n      caretSize\n    } = options;\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {\n      body\n    } = me;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + 1 : boxWidth + 2 : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options\n      });\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nconst addIfString = (labels, raw, index) => typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {\n  horizontal,\n  minRotation\n}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      beginAtZero\n    } = me.options;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min ? 0 : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - size.w / 2;\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= textSize.h / 2;\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n    me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {\n      angleLines,\n      grid\n    } = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {\n      min,\n      max\n    };\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min)) : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return me._cache.data = metas[0].controller.getAllParsedValues(me);\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return me._cache.data = me.normalize(timestamps);\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps);\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {\n      min,\n      max\n    } = me;\n    if (!timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index) ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","i","isObject","b","isArray","d","defaults","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","isNullOrUndef","k","clipArea","m","unclipArea","_","_arrayUnique","t","toRadians","n","toPercentage","o","toDimension","T","TAU","p","formatNumber","q","_angleBetween","H","HALF_PI","P","PI","w","isNumber","x","_limitValue","y","_lookupByKey","z","getRelativePosition$1","A","_isPointInArea","B","_rlookupByKey","C","toPadding","D","each","E","getMaximumSize","F","_getParentNode","G","readUsedSize","I","throttled","J","supportsEventListenerOptions","K","log10","L","_factorize","M","finiteOrDefault","N","callback","O","_addGrace","Q","toDegrees","R","_measureText","S","_int16Range","U","_alignPixel","V","renderText","W","toFont","X","_toLeftRightCenter","Y","_alignStartEnd","Z","overrides","$","merge","a0","_capitalize","a1","descriptors","a2","isFunction","a3","_attachContext","a4","_createResolver","a5","_descriptors","a6","mergeIf","a7","uid","a8","debounce","a9","retinaScale","aa","clearCanvas","ab","setsEqual","ac","_elementsEqual","ad","getAngleFromPoint","ae","_readValueToProps","af","_updateBezierControlPoints","ag","_computeSegments","ah","_boundSegments","ai","_steppedInterpolation","aj","_bezierInterpolation","ak","_pointInLine","al","_steppedLineTo","am","_bezierCurveTo","an","drawPoint","ao","addRoundedRectPath","ap","toTRBL","aq","toTRBLCorners","ar","_boundSegment","as","_normalizeAngle","at","getRtlAdapter","au","overrideTextDirection","av","_textX","aw","restoreTextDirection","ax","noop","ay","distanceBetweenPoints","az","_setMinAndMaxByKey","aA","niceNum","aB","almostWhole","aC","almostEquals","aD","_decimalPlaces","aE","_longestText","aF","_filterBetween","aG","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","me","call","window","_update","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","create","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","metas","concat","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","BarController","iAxisKey","vAxisKey","obj","bars","base","getBasePixel","horizontal","isHorizontal","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","enableBorderRadius","center","height","width","_getStacks","last","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","grouped","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","interaction","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","iPixel","getPixelForDecimal","vPixel","skip","radius","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","hidden","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","v1","wrapBoxes","boxes","layoutBoxes","setLayoutDims","layouts","params","layout","fullSize","availableWidth","hBoxMaxHeight","vBoxMaxWidth","availableHeight","buildLayoutBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","placeBoxes","userPadding","padding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","createAttachObserver","container","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","args","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","Element","tooltipPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","includes","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","Chart","initialCanvas","existingChart","platform","_initializePlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","console","error","_initialize","maintainAspectRatio","responsive","bindEvents","OffscreenCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","existingEvents","newEvents","events","unbindEvents","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateDatasetVisibility","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_updateHoverStyles","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","lastEvent","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","alpha","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","pointStyle","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","swap","startEnd","orig","v2","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","configurable","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","hitbox","_draw","defaultColor","rtlHelper","rtl","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","leftForLtr","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","step","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","adjustPointPositionForLabelHeight","getTextAlignForAngle","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","limit","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_maxIndex","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["/Users/elmouhcadielbakalitahiri/dev/playground/angular/primeng-demo/node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.3.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as renderText, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[axis][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (me.index === stack._top || me.index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    unclipArea(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n    for (i = 0; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.3.2\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + offset + pixelMargin : 0;\n  const alpha = end - start;\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset;\n  const endAngle = end - angleOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset);\n    drawBorder(ctx, me, radiusOffset, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach((segment) => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + (fontSize / 2) + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin),\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - (size.w / 2);\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h,\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= (textSize.h / 2);\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}