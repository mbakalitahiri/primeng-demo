{"ast":null,"code":"import _defineProperty from \"/Users/elmouhcadielbakalitahiri/dev/playground/angular/primeng-demo/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as i1 from '@angular/common';\nimport { isPlatformBrowser, DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Input, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\n\n/**\n * Splitter is utilized to separate and resize panels.\n * @group Components\n */\nconst _c0 = [\"container\"];\nfunction Splitter_ng_template_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Splitter_ng_template_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵlistener(\"mousedown\", function Splitter_ng_template_2_div_2_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const i_r3 = i0.ɵɵnextContext().index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onGutterMouseDown($event, i_r3));\n    })(\"touchstart\", function Splitter_ng_template_2_div_2_Template_div_touchstart_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const i_r3 = i0.ɵɵnextContext().index;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onGutterTouchStart($event, i_r3));\n    })(\"touchmove\", function Splitter_ng_template_2_div_2_Template_div_touchmove_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onGutterTouchMove($event));\n    })(\"touchend\", function Splitter_ng_template_2_div_2_Template_div_touchend_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const i_r3 = i0.ɵɵnextContext().index;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onGutterTouchEnd($event, i_r3));\n    });\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵlistener(\"keyup\", function Splitter_ng_template_2_div_2_Template_div_keyup_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onGutterKeyUp($event));\n    })(\"keydown\", function Splitter_ng_template_2_div_2_Template_div_keydown_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const i_r3 = i0.ɵɵnextContext().index;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.onGutterKeyDown($event, i_r3));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"data-p-gutter-resizing\", false)(\"data-pc-section\", \"gutter\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r5.gutterStyle());\n    i0.ɵɵattribute(\"aria-orientation\", ctx_r5.layout)(\"aria-valuenow\", ctx_r5.prevSize)(\"data-pc-section\", \"gutterhandle\");\n  }\n}\nfunction Splitter_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, Splitter_ng_template_2_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, Splitter_ng_template_2_div_2_Template, 2, 6, \"div\", 5);\n  }\n  if (rf & 2) {\n    const panel_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.panelStyleClass);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.panelContainerClass())(\"ngStyle\", ctx_r1.panelStyle);\n    i0.ɵɵattribute(\"data-pc-name\", \"splitter\")(\"data-pc-section\", \"root\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", panel_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i_r3 !== ctx_r1.panels.length - 1);\n  }\n}\nclass Splitter {\n  /**\n   * Size of the elements relative to 100%.\n   * @group Props\n   */\n  get panelSizes() {\n    return this._panelSizes;\n  }\n  set panelSizes(val) {\n    this._panelSizes = val;\n    if (this.el && this.el.nativeElement && this.panels.length > 0) {\n      let children = [...this.el.nativeElement.children[0].children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\n      let _panelSizes = [];\n      this.panels.map((panel, i) => {\n        let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n        let panelSize = panelInitialSize || 100 / this.panels.length;\n        _panelSizes[i] = panelSize;\n        children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      });\n    }\n  }\n  /**\n   * Callback to invoke when resize ends.\n   * @param {SplitterResizeEndEvent} event - Custom panel resize end event\n   * @group Emits\n   */\n\n  constructor(document, platformId, renderer, cd, el) {\n    _defineProperty(this, \"document\", void 0);\n    _defineProperty(this, \"platformId\", void 0);\n    _defineProperty(this, \"renderer\", void 0);\n    _defineProperty(this, \"cd\", void 0);\n    _defineProperty(this, \"el\", void 0);\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    _defineProperty(this, \"styleClass\", void 0);\n    /**\n     * Style class of the panel.\n     * @group Props\n     */\n    _defineProperty(this, \"panelStyleClass\", void 0);\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    _defineProperty(this, \"style\", void 0);\n    /**\n     * Inline style of the panel.\n     * @group Props\n     */\n    _defineProperty(this, \"panelStyle\", void 0);\n    /**\n     * Defines where a stateful splitter keeps its state, valid values are 'session' for sessionStorage and 'local' for localStorage.\n     * @group Props\n     */\n    _defineProperty(this, \"stateStorage\", 'session');\n    /**\n     * Storage identifier of a stateful Splitter.\n     * @group Props\n     */\n    _defineProperty(this, \"stateKey\", null);\n    /**\n     * Orientation of the panels. Valid values are 'horizontal' and 'vertical'.\n     * @group Props\n     */\n    _defineProperty(this, \"layout\", 'horizontal');\n    /**\n     * Size of the divider in pixels.\n     * @group Props\n     */\n    _defineProperty(this, \"gutterSize\", 4);\n    /**\n     * Step factor to increment/decrement the size of the panels while pressing the arrow keys.\n     * @group Props\n     */\n    _defineProperty(this, \"step\", 5);\n    /**\n     * Minimum size of the elements relative to 100%.\n     * @group Props\n     */\n    _defineProperty(this, \"minSizes\", []);\n    _defineProperty(this, \"onResizeEnd\", new EventEmitter());\n    /**\n     * Callback to invoke when resize starts.\n     * @param {SplitterResizeStartEvent} event - Custom panel resize start event\n     * @group Emits\n     */\n    _defineProperty(this, \"onResizeStart\", new EventEmitter());\n    _defineProperty(this, \"templates\", void 0);\n    _defineProperty(this, \"containerViewChild\", void 0);\n    _defineProperty(this, \"nested\", false);\n    _defineProperty(this, \"panels\", []);\n    _defineProperty(this, \"dragging\", false);\n    _defineProperty(this, \"mouseMoveListener\", void 0);\n    _defineProperty(this, \"mouseUpListener\", void 0);\n    _defineProperty(this, \"touchMoveListener\", void 0);\n    _defineProperty(this, \"touchEndListener\", void 0);\n    _defineProperty(this, \"size\", void 0);\n    _defineProperty(this, \"gutterElement\", void 0);\n    _defineProperty(this, \"startPos\", void 0);\n    _defineProperty(this, \"prevPanelElement\", void 0);\n    _defineProperty(this, \"nextPanelElement\", void 0);\n    _defineProperty(this, \"nextPanelSize\", void 0);\n    _defineProperty(this, \"prevPanelSize\", void 0);\n    _defineProperty(this, \"_panelSizes\", []);\n    _defineProperty(this, \"prevPanelIndex\", void 0);\n    _defineProperty(this, \"timer\", void 0);\n    _defineProperty(this, \"prevSize\", void 0);\n    _defineProperty(this, \"window\", void 0);\n    this.document = document;\n    this.platformId = platformId;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.el = el;\n    this.window = this.document.defaultView;\n  }\n  ngOnInit() {\n    this.nested = this.isNested();\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'panel':\n          this.panels.push(item.template);\n          break;\n        default:\n          this.panels.push(item.template);\n          break;\n      }\n    });\n  }\n  ngAfterViewInit() {\n    if (this.panels && this.panels.length) {\n      let initialized = false;\n      if (this.isStateful() && isPlatformBrowser(this.platformId)) {\n        initialized = this.restoreState();\n      }\n      if (!initialized) {\n        let children = [...this.el.nativeElement.children[0].children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\n        let _panelSizes = [];\n        this.panels.map((panel, i) => {\n          let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n          let panelSize = panelInitialSize || 100 / this.panels.length;\n          _panelSizes[i] = panelSize;\n          children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n        });\n        this._panelSizes = _panelSizes;\n        this.prevSize = parseFloat(_panelSizes[0]).toFixed(4);\n      }\n    }\n  }\n  resizeStart(event, index, isKeyDown) {\n    this.gutterElement = event.currentTarget || event.target.parentElement;\n    this.size = this.horizontal() ? DomHandler.getWidth(this.containerViewChild.nativeElement) : DomHandler.getHeight(this.containerViewChild.nativeElement);\n    if (!isKeyDown) {\n      this.dragging = true;\n      this.startPos = this.horizontal() ? event instanceof MouseEvent ? event.pageX : event.changedTouches[0].pageX : event instanceof MouseEvent ? event.pageY : event.changedTouches[0].pageY;\n    }\n    this.prevPanelElement = this.gutterElement.previousElementSibling;\n    this.nextPanelElement = this.gutterElement.nextElementSibling;\n    if (isKeyDown) {\n      this.prevPanelSize = this.horizontal() ? DomHandler.getOuterWidth(this.prevPanelElement, true) : DomHandler.getOuterHeight(this.prevPanelElement, true);\n      this.nextPanelSize = this.horizontal() ? DomHandler.getOuterWidth(this.nextPanelElement, true) : DomHandler.getOuterHeight(this.nextPanelElement, true);\n    } else {\n      this.prevPanelSize = 100 * (this.horizontal() ? DomHandler.getOuterWidth(this.prevPanelElement, true) : DomHandler.getOuterHeight(this.prevPanelElement, true)) / this.size;\n      this.nextPanelSize = 100 * (this.horizontal() ? DomHandler.getOuterWidth(this.nextPanelElement, true) : DomHandler.getOuterHeight(this.nextPanelElement, true)) / this.size;\n    }\n    this.prevPanelIndex = index;\n    DomHandler.addClass(this.gutterElement, 'p-splitter-gutter-resizing');\n    this.gutterElement.setAttribute('data-p-gutter-resizing', 'true');\n    DomHandler.addClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n    this.containerViewChild.nativeElement.setAttribute('data-p-resizing', 'true');\n    this.onResizeStart.emit({\n      originalEvent: event,\n      sizes: this._panelSizes\n    });\n  }\n  onResize(event, step, isKeyDown) {\n    let newPos, newPrevPanelSize, newNextPanelSize;\n    if (isKeyDown) {\n      if (this.horizontal()) {\n        newPrevPanelSize = 100 * (this.prevPanelSize + step) / this.size;\n        newNextPanelSize = 100 * (this.nextPanelSize - step) / this.size;\n      } else {\n        newPrevPanelSize = 100 * (this.prevPanelSize - step) / this.size;\n        newNextPanelSize = 100 * (this.nextPanelSize + step) / this.size;\n      }\n    } else {\n      if (this.horizontal()) newPos = event.pageX * 100 / this.size - this.startPos * 100 / this.size;else newPos = event.pageY * 100 / this.size - this.startPos * 100 / this.size;\n      newPrevPanelSize = this.prevPanelSize + newPos;\n      newNextPanelSize = this.nextPanelSize - newPos;\n    }\n    this.prevSize = parseFloat(newPrevPanelSize).toFixed(4);\n    if (this.validateResize(newPrevPanelSize, newNextPanelSize)) {\n      this.prevPanelElement.style.flexBasis = 'calc(' + newPrevPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      this.nextPanelElement.style.flexBasis = 'calc(' + newNextPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      this._panelSizes[this.prevPanelIndex] = newPrevPanelSize;\n      this._panelSizes[this.prevPanelIndex + 1] = newNextPanelSize;\n    }\n  }\n  resizeEnd(event) {\n    if (this.isStateful()) {\n      this.saveState();\n    }\n    this.onResizeEnd.emit({\n      originalEvent: event,\n      sizes: this._panelSizes\n    });\n    DomHandler.removeClass(this.gutterElement, 'p-splitter-gutter-resizing');\n    DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n    this.clear();\n  }\n  onGutterMouseDown(event, index) {\n    this.resizeStart(event, index);\n    this.bindMouseListeners();\n  }\n  onGutterTouchStart(event, index) {\n    if (event.cancelable) {\n      this.resizeStart(event, index);\n      this.bindTouchListeners();\n      event.preventDefault();\n    }\n  }\n  onGutterTouchMove(event) {\n    this.onResize(event);\n    event.preventDefault();\n  }\n  onGutterTouchEnd(event) {\n    this.resizeEnd(event);\n    this.unbindTouchListeners();\n    if (event.cancelable) event.preventDefault();\n  }\n  repeat(event, index, step) {\n    this.resizeStart(event, index, true);\n    this.onResize(event, step, true);\n  }\n  setTimer(event, index, step) {\n    this.clearTimer();\n    this.timer = setTimeout(() => {\n      this.repeat(event, index, step);\n    }, 40);\n  }\n  clearTimer() {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n  }\n  onGutterKeyUp(event) {\n    this.clearTimer();\n    this.resizeEnd(event);\n  }\n  onGutterKeyDown(event, index) {\n    switch (event.code) {\n      case 'ArrowLeft':\n        {\n          if (this.layout === 'horizontal') {\n            this.setTimer(event, index, this.step * -1);\n          }\n          event.preventDefault();\n          break;\n        }\n      case 'ArrowRight':\n        {\n          if (this.layout === 'horizontal') {\n            this.setTimer(event, index, this.step);\n          }\n          event.preventDefault();\n          break;\n        }\n      case 'ArrowDown':\n        {\n          if (this.layout === 'vertical') {\n            this.setTimer(event, index, this.step * -1);\n          }\n          event.preventDefault();\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (this.layout === 'vertical') {\n            this.setTimer(event, index, this.step);\n          }\n          event.preventDefault();\n          break;\n        }\n      default:\n        //no op\n        break;\n    }\n  }\n  validateResize(newPrevPanelSize, newNextPanelSize) {\n    if (this.minSizes.length >= 1 && this.minSizes[0] && this.minSizes[0] > newPrevPanelSize) {\n      return false;\n    }\n    if (this.minSizes.length > 1 && this.minSizes[1] && this.minSizes[1] > newNextPanelSize) {\n      return false;\n    }\n    return true;\n  }\n  bindMouseListeners() {\n    if (!this.mouseMoveListener) {\n      this.mouseMoveListener = this.renderer.listen(this.document, 'mousemove', event => {\n        this.onResize(event);\n      });\n    }\n    if (!this.mouseUpListener) {\n      this.mouseUpListener = this.renderer.listen(this.document, 'mouseup', event => {\n        this.resizeEnd(event);\n        this.unbindMouseListeners();\n      });\n    }\n  }\n  bindTouchListeners() {\n    if (!this.touchMoveListener) {\n      this.touchMoveListener = this.renderer.listen(this.document, 'touchmove', event => {\n        this.onResize(event.changedTouches[0]);\n      });\n    }\n    if (!this.touchEndListener) {\n      this.touchEndListener = this.renderer.listen(this.document, 'touchend', event => {\n        this.resizeEnd(event);\n        this.unbindTouchListeners();\n      });\n    }\n  }\n  unbindMouseListeners() {\n    if (this.mouseMoveListener) {\n      this.mouseMoveListener();\n      this.mouseMoveListener = null;\n    }\n    if (this.mouseUpListener) {\n      this.mouseUpListener();\n      this.mouseUpListener = null;\n    }\n  }\n  unbindTouchListeners() {\n    if (this.touchMoveListener) {\n      this.touchMoveListener();\n      this.touchMoveListener = null;\n    }\n    if (this.touchEndListener) {\n      this.touchEndListener();\n      this.touchEndListener = null;\n    }\n  }\n  clear() {\n    this.dragging = false;\n    this.size = null;\n    this.startPos = null;\n    this.prevPanelElement = null;\n    this.nextPanelElement = null;\n    this.prevPanelSize = null;\n    this.nextPanelSize = null;\n    this.gutterElement = null;\n    this.prevPanelIndex = null;\n  }\n  isNested() {\n    if (this.el.nativeElement) {\n      let parent = this.el.nativeElement.parentElement;\n      while (parent && !DomHandler.hasClass(parent, 'p-splitter')) {\n        parent = parent.parentElement;\n      }\n      return parent !== null;\n    } else {\n      return false;\n    }\n  }\n  isStateful() {\n    return this.stateKey != null;\n  }\n  getStorage() {\n    if (isPlatformBrowser(this.platformId)) {\n      switch (this.stateStorage) {\n        case 'local':\n          return this.window.localStorage;\n        case 'session':\n          return this.window.sessionStorage;\n        default:\n          throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n      }\n    } else {\n      throw new Error('Storage is not a available by default on the server.');\n    }\n  }\n  saveState() {\n    this.getStorage().setItem(this.stateKey, JSON.stringify(this._panelSizes));\n  }\n  restoreState() {\n    const storage = this.getStorage();\n    const stateString = storage.getItem(this.stateKey);\n    if (stateString) {\n      this._panelSizes = JSON.parse(stateString);\n      let children = [...this.containerViewChild.nativeElement.children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\n      children.forEach((child, i) => {\n        child.style.flexBasis = 'calc(' + this._panelSizes[i] + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      });\n      return true;\n    }\n    return false;\n  }\n  containerClass() {\n    return {\n      'p-splitter p-component': true,\n      'p-splitter-horizontal': this.layout === 'horizontal',\n      'p-splitter-vertical': this.layout === 'vertical'\n    };\n  }\n  panelContainerClass() {\n    return {\n      'p-splitter-panel': true,\n      'p-splitter-panel-nested': true\n    };\n  }\n  gutterStyle() {\n    if (this.horizontal()) return {\n      width: this.gutterSize + 'px'\n    };else return {\n      height: this.gutterSize + 'px'\n    };\n  }\n  horizontal() {\n    return this.layout === 'horizontal';\n  }\n}\n_defineProperty(Splitter, \"\\u0275fac\", function Splitter_Factory(t) {\n  return new (t || Splitter)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n});\n_defineProperty(Splitter, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Splitter,\n  selectors: [[\"p-splitter\"]],\n  contentQueries: function Splitter_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function Splitter_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\"],\n  hostVars: 2,\n  hostBindings: function Splitter_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-splitter-panel-nested\", ctx.nested);\n    }\n  },\n  inputs: {\n    styleClass: \"styleClass\",\n    panelStyleClass: \"panelStyleClass\",\n    style: \"style\",\n    panelStyle: \"panelStyle\",\n    stateStorage: \"stateStorage\",\n    stateKey: \"stateKey\",\n    layout: \"layout\",\n    gutterSize: \"gutterSize\",\n    step: \"step\",\n    minSizes: \"minSizes\",\n    panelSizes: \"panelSizes\"\n  },\n  outputs: {\n    onResizeEnd: \"onResizeEnd\",\n    onResizeStart: \"onResizeStart\"\n  },\n  decls: 3,\n  vars: 8,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"tabindex\", \"-1\", 3, \"ngClass\", \"ngStyle\"], [4, \"ngTemplateOutlet\"], [\"class\", \"p-splitter-gutter\", \"role\", \"seperator\", \"tabindex\", \"-1\", 3, \"mousedown\", \"touchstart\", \"touchmove\", \"touchend\", 4, \"ngIf\"], [\"role\", \"seperator\", \"tabindex\", \"-1\", 1, \"p-splitter-gutter\", 3, \"mousedown\", \"touchstart\", \"touchmove\", \"touchend\"], [\"tabindex\", \"0\", 1, \"p-splitter-gutter-handle\", 3, \"ngStyle\", \"keyup\", \"keydown\"]],\n  template: function Splitter_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, Splitter_ng_template_2_Template, 3, 8, \"ng-template\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", ctx.containerClass())(\"ngStyle\", ctx.style);\n      i0.ɵɵattribute(\"data-pc-name\", \"splitter\")(\"data-p-gutter-resizing\", false)(\"data-pc-section\", \"root\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.panels);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle],\n  styles: [\".p-splitter{display:flex;flex-wrap:nowrap}.p-splitter-vertical{flex-direction:column}.p-splitter-panel{flex-grow:1}.p-splitter-panel-nested{display:flex}.p-splitter-panel p-splitter{flex-grow:1}.p-splitter-panel .p-splitter{flex-grow:1;border:0 none}.p-splitter-gutter{flex-grow:0;flex-shrink:0;display:flex;align-items:center;justify-content:center;cursor:col-resize}.p-splitter-horizontal.p-splitter-resizing{cursor:col-resize;-webkit-user-select:none;user-select:none}.p-splitter-horizontal>.p-splitter-gutter>.p-splitter-gutter-handle{height:24px;width:100%}.p-splitter-horizontal>.p-splitter-gutter{cursor:col-resize}.p-splitter-vertical.p-splitter-resizing{cursor:row-resize;-webkit-user-select:none;user-select:none}.p-splitter-vertical>.p-splitter-gutter{cursor:row-resize}.p-splitter-vertical>.p-splitter-gutter>.p-splitter-gutter-handle{width:24px;height:100%}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Splitter, [{\n    type: Component,\n    args: [{\n      selector: 'p-splitter',\n      template: `\n        <div #container [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\" [attr.data-pc-name]=\"'splitter'\" [attr.data-p-gutter-resizing]=\"false\" [attr.data-pc-section]=\"'root'\">\n            <ng-template ngFor let-panel [ngForOf]=\"panels\" let-i=\"index\">\n                <div [ngClass]=\"panelContainerClass()\" [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\" tabindex=\"-1\" [attr.data-pc-name]=\"'splitter'\" [attr.data-pc-section]=\"'root'\">\n                    <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\n                </div>\n                <div\n                    *ngIf=\"i !== panels.length - 1\"\n                    class=\"p-splitter-gutter\"\n                    role=\"seperator\"\n                    tabindex=\"-1\"\n                    (mousedown)=\"onGutterMouseDown($event, i)\"\n                    (touchstart)=\"onGutterTouchStart($event, i)\"\n                    (touchmove)=\"onGutterTouchMove($event)\"\n                    (touchend)=\"onGutterTouchEnd($event, i)\"\n                    [attr.data-p-gutter-resizing]=\"false\"\n                    [attr.data-pc-section]=\"'gutter'\"\n                >\n                    <div\n                        class=\"p-splitter-gutter-handle\"\n                        tabindex=\"0\"\n                        [ngStyle]=\"gutterStyle()\"\n                        [attr.aria-orientation]=\"layout\"\n                        [attr.aria-valuenow]=\"prevSize\"\n                        [attr.data-pc-section]=\"'gutterhandle'\"\n                        (keyup)=\"onGutterKeyUp($event)\"\n                        (keydown)=\"onGutterKeyDown($event, i)\"\n                    ></div>\n                </div>\n            </ng-template>\n        </div>\n    `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        class: 'p-element',\n        '[class.p-splitter-panel-nested]': 'nested'\n      },\n      styles: [\".p-splitter{display:flex;flex-wrap:nowrap}.p-splitter-vertical{flex-direction:column}.p-splitter-panel{flex-grow:1}.p-splitter-panel-nested{display:flex}.p-splitter-panel p-splitter{flex-grow:1}.p-splitter-panel .p-splitter{flex-grow:1;border:0 none}.p-splitter-gutter{flex-grow:0;flex-shrink:0;display:flex;align-items:center;justify-content:center;cursor:col-resize}.p-splitter-horizontal.p-splitter-resizing{cursor:col-resize;-webkit-user-select:none;user-select:none}.p-splitter-horizontal>.p-splitter-gutter>.p-splitter-gutter-handle{height:24px;width:100%}.p-splitter-horizontal>.p-splitter-gutter{cursor:col-resize}.p-splitter-vertical.p-splitter-resizing{cursor:row-resize;-webkit-user-select:none;user-select:none}.p-splitter-vertical>.p-splitter-gutter{cursor:row-resize}.p-splitter-vertical>.p-splitter-gutter>.p-splitter-gutter-handle{width:24px;height:100%}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    styleClass: [{\n      type: Input\n    }],\n    panelStyleClass: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    panelStyle: [{\n      type: Input\n    }],\n    stateStorage: [{\n      type: Input\n    }],\n    stateKey: [{\n      type: Input\n    }],\n    layout: [{\n      type: Input\n    }],\n    gutterSize: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    minSizes: [{\n      type: Input\n    }],\n    panelSizes: [{\n      type: Input\n    }],\n    onResizeEnd: [{\n      type: Output\n    }],\n    onResizeStart: [{\n      type: Output\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container', {\n        static: false\n      }]\n    }]\n  });\n})();\nclass SplitterModule {}\n_defineProperty(SplitterModule, \"\\u0275fac\", function SplitterModule_Factory(t) {\n  return new (t || SplitterModule)();\n});\n_defineProperty(SplitterModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SplitterModule\n}));\n_defineProperty(SplitterModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, SharedModule]\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SplitterModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [Splitter, SharedModule],\n      declarations: [Splitter]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Splitter, SplitterModule };","map":{"version":3,"names":["i1","isPlatformBrowser","DOCUMENT","CommonModule","i0","EventEmitter","PLATFORM_ID","Component","ViewEncapsulation","ChangeDetectionStrategy","Inject","Input","Output","ContentChildren","ViewChild","NgModule","PrimeTemplate","SharedModule","DomHandler","_c0","Splitter_ng_template_2_ng_container_1_Template","rf","ctx","ɵɵelementContainer","Splitter_ng_template_2_div_2_Template","_r8","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","Splitter_ng_template_2_div_2_Template_div_mousedown_0_listener","$event","ɵɵrestoreView","i_r3","ɵɵnextContext","index","ctx_r6","ɵɵresetView","onGutterMouseDown","Splitter_ng_template_2_div_2_Template_div_touchstart_0_listener","ctx_r9","onGutterTouchStart","Splitter_ng_template_2_div_2_Template_div_touchmove_0_listener","ctx_r11","onGutterTouchMove","Splitter_ng_template_2_div_2_Template_div_touchend_0_listener","ctx_r12","onGutterTouchEnd","Splitter_ng_template_2_div_2_Template_div_keyup_1_listener","ctx_r14","onGutterKeyUp","Splitter_ng_template_2_div_2_Template_div_keydown_1_listener","ctx_r15","onGutterKeyDown","ɵɵelementEnd","ctx_r5","ɵɵattribute","ɵɵadvance","ɵɵproperty","gutterStyle","layout","prevSize","Splitter_ng_template_2_Template","ɵɵtemplate","panel_r2","$implicit","ctx_r1","ɵɵclassMap","panelStyleClass","panelContainerClass","panelStyle","panels","length","Splitter","panelSizes","_panelSizes","val","el","nativeElement","children","filter","child","hasClass","map","panel","i","panelInitialSize","panelSize","style","flexBasis","gutterSize","constructor","document","platformId","renderer","cd","_defineProperty","window","defaultView","ngOnInit","nested","isNested","ngAfterContentInit","templates","forEach","item","getType","push","template","ngAfterViewInit","initialized","isStateful","restoreState","parseFloat","toFixed","resizeStart","event","isKeyDown","gutterElement","currentTarget","target","parentElement","size","horizontal","getWidth","containerViewChild","getHeight","dragging","startPos","MouseEvent","pageX","changedTouches","pageY","prevPanelElement","previousElementSibling","nextPanelElement","nextElementSibling","prevPanelSize","getOuterWidth","getOuterHeight","nextPanelSize","prevPanelIndex","addClass","setAttribute","onResizeStart","emit","originalEvent","sizes","onResize","step","newPos","newPrevPanelSize","newNextPanelSize","validateResize","resizeEnd","saveState","onResizeEnd","removeClass","clear","bindMouseListeners","cancelable","bindTouchListeners","preventDefault","unbindTouchListeners","repeat","setTimer","clearTimer","timer","setTimeout","clearTimeout","code","minSizes","mouseMoveListener","listen","mouseUpListener","unbindMouseListeners","touchMoveListener","touchEndListener","parent","stateKey","getStorage","stateStorage","localStorage","sessionStorage","Error","setItem","JSON","stringify","storage","stateString","getItem","parse","containerClass","width","height","Splitter_Factory","t","ɵɵdirectiveInject","Renderer2","ChangeDetectorRef","ElementRef","ɵɵdefineComponent","type","selectors","contentQueries","Splitter_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","viewQuery","Splitter_Query","ɵɵviewQuery","first","hostAttrs","hostVars","hostBindings","Splitter_HostBindings","ɵɵclassProp","inputs","styleClass","outputs","decls","vars","consts","Splitter_Template","dependencies","NgClass","NgForOf","NgIf","NgTemplateOutlet","NgStyle","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","None","OnPush","host","class","Document","decorators","undefined","static","SplitterModule","SplitterModule_Factory","ɵɵdefineNgModule","ɵɵdefineInjector","imports","exports","declarations"],"sources":["/Users/elmouhcadielbakalitahiri/dev/playground/angular/primeng-demo/node_modules/primeng/fesm2022/primeng-splitter.mjs"],"sourcesContent":["import * as i1 from '@angular/common';\nimport { isPlatformBrowser, DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Input, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\n\n/**\n * Splitter is utilized to separate and resize panels.\n * @group Components\n */\nclass Splitter {\n    document;\n    platformId;\n    renderer;\n    cd;\n    el;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Style class of the panel.\n     * @group Props\n     */\n    panelStyleClass;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Inline style of the panel.\n     * @group Props\n     */\n    panelStyle;\n    /**\n     * Defines where a stateful splitter keeps its state, valid values are 'session' for sessionStorage and 'local' for localStorage.\n     * @group Props\n     */\n    stateStorage = 'session';\n    /**\n     * Storage identifier of a stateful Splitter.\n     * @group Props\n     */\n    stateKey = null;\n    /**\n     * Orientation of the panels. Valid values are 'horizontal' and 'vertical'.\n     * @group Props\n     */\n    layout = 'horizontal';\n    /**\n     * Size of the divider in pixels.\n     * @group Props\n     */\n    gutterSize = 4;\n    /**\n     * Step factor to increment/decrement the size of the panels while pressing the arrow keys.\n     * @group Props\n     */\n    step = 5;\n    /**\n     * Minimum size of the elements relative to 100%.\n     * @group Props\n     */\n    minSizes = [];\n    /**\n     * Size of the elements relative to 100%.\n     * @group Props\n     */\n    get panelSizes() {\n        return this._panelSizes;\n    }\n    set panelSizes(val) {\n        this._panelSizes = val;\n        if (this.el && this.el.nativeElement && this.panels.length > 0) {\n            let children = [...this.el.nativeElement.children[0].children].filter((child) => DomHandler.hasClass(child, 'p-splitter-panel'));\n            let _panelSizes = [];\n            this.panels.map((panel, i) => {\n                let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n                let panelSize = panelInitialSize || 100 / this.panels.length;\n                _panelSizes[i] = panelSize;\n                children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n            });\n        }\n    }\n    /**\n     * Callback to invoke when resize ends.\n     * @param {SplitterResizeEndEvent} event - Custom panel resize end event\n     * @group Emits\n     */\n    onResizeEnd = new EventEmitter();\n    /**\n     * Callback to invoke when resize starts.\n     * @param {SplitterResizeStartEvent} event - Custom panel resize start event\n     * @group Emits\n     */\n    onResizeStart = new EventEmitter();\n    templates;\n    containerViewChild;\n    nested = false;\n    panels = [];\n    dragging = false;\n    mouseMoveListener;\n    mouseUpListener;\n    touchMoveListener;\n    touchEndListener;\n    size;\n    gutterElement;\n    startPos;\n    prevPanelElement;\n    nextPanelElement;\n    nextPanelSize;\n    prevPanelSize;\n    _panelSizes = [];\n    prevPanelIndex;\n    timer;\n    prevSize;\n    window;\n    constructor(document, platformId, renderer, cd, el) {\n        this.document = document;\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.cd = cd;\n        this.el = el;\n        this.window = this.document.defaultView;\n    }\n    ngOnInit() {\n        this.nested = this.isNested();\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'panel':\n                    this.panels.push(item.template);\n                    break;\n                default:\n                    this.panels.push(item.template);\n                    break;\n            }\n        });\n    }\n    ngAfterViewInit() {\n        if (this.panels && this.panels.length) {\n            let initialized = false;\n            if (this.isStateful() && isPlatformBrowser(this.platformId)) {\n                initialized = this.restoreState();\n            }\n            if (!initialized) {\n                let children = [...this.el.nativeElement.children[0].children].filter((child) => DomHandler.hasClass(child, 'p-splitter-panel'));\n                let _panelSizes = [];\n                this.panels.map((panel, i) => {\n                    let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n                    let panelSize = panelInitialSize || 100 / this.panels.length;\n                    _panelSizes[i] = panelSize;\n                    children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n                });\n                this._panelSizes = _panelSizes;\n                this.prevSize = parseFloat(_panelSizes[0]).toFixed(4);\n            }\n        }\n    }\n    resizeStart(event, index, isKeyDown) {\n        this.gutterElement = event.currentTarget || event.target.parentElement;\n        this.size = this.horizontal() ? DomHandler.getWidth(this.containerViewChild.nativeElement) : DomHandler.getHeight(this.containerViewChild.nativeElement);\n        if (!isKeyDown) {\n            this.dragging = true;\n            this.startPos = this.horizontal() ? (event instanceof MouseEvent ? event.pageX : event.changedTouches[0].pageX) : event instanceof MouseEvent ? event.pageY : event.changedTouches[0].pageY;\n        }\n        this.prevPanelElement = this.gutterElement.previousElementSibling;\n        this.nextPanelElement = this.gutterElement.nextElementSibling;\n        if (isKeyDown) {\n            this.prevPanelSize = this.horizontal() ? DomHandler.getOuterWidth(this.prevPanelElement, true) : DomHandler.getOuterHeight(this.prevPanelElement, true);\n            this.nextPanelSize = this.horizontal() ? DomHandler.getOuterWidth(this.nextPanelElement, true) : DomHandler.getOuterHeight(this.nextPanelElement, true);\n        }\n        else {\n            this.prevPanelSize = (100 * (this.horizontal() ? DomHandler.getOuterWidth(this.prevPanelElement, true) : DomHandler.getOuterHeight(this.prevPanelElement, true))) / this.size;\n            this.nextPanelSize = (100 * (this.horizontal() ? DomHandler.getOuterWidth(this.nextPanelElement, true) : DomHandler.getOuterHeight(this.nextPanelElement, true))) / this.size;\n        }\n        this.prevPanelIndex = index;\n        DomHandler.addClass(this.gutterElement, 'p-splitter-gutter-resizing');\n        this.gutterElement.setAttribute('data-p-gutter-resizing', 'true');\n        DomHandler.addClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n        this.containerViewChild.nativeElement.setAttribute('data-p-resizing', 'true');\n        this.onResizeStart.emit({ originalEvent: event, sizes: this._panelSizes });\n    }\n    onResize(event, step, isKeyDown) {\n        let newPos, newPrevPanelSize, newNextPanelSize;\n        if (isKeyDown) {\n            if (this.horizontal()) {\n                newPrevPanelSize = (100 * (this.prevPanelSize + step)) / this.size;\n                newNextPanelSize = (100 * (this.nextPanelSize - step)) / this.size;\n            }\n            else {\n                newPrevPanelSize = (100 * (this.prevPanelSize - step)) / this.size;\n                newNextPanelSize = (100 * (this.nextPanelSize + step)) / this.size;\n            }\n        }\n        else {\n            if (this.horizontal())\n                newPos = (event.pageX * 100) / this.size - (this.startPos * 100) / this.size;\n            else\n                newPos = (event.pageY * 100) / this.size - (this.startPos * 100) / this.size;\n            newPrevPanelSize = this.prevPanelSize + newPos;\n            newNextPanelSize = this.nextPanelSize - newPos;\n        }\n        this.prevSize = parseFloat(newPrevPanelSize).toFixed(4);\n        if (this.validateResize(newPrevPanelSize, newNextPanelSize)) {\n            this.prevPanelElement.style.flexBasis = 'calc(' + newPrevPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n            this.nextPanelElement.style.flexBasis = 'calc(' + newNextPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n            this._panelSizes[this.prevPanelIndex] = newPrevPanelSize;\n            this._panelSizes[this.prevPanelIndex + 1] = newNextPanelSize;\n        }\n    }\n    resizeEnd(event) {\n        if (this.isStateful()) {\n            this.saveState();\n        }\n        this.onResizeEnd.emit({ originalEvent: event, sizes: this._panelSizes });\n        DomHandler.removeClass(this.gutterElement, 'p-splitter-gutter-resizing');\n        DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n        this.clear();\n    }\n    onGutterMouseDown(event, index) {\n        this.resizeStart(event, index);\n        this.bindMouseListeners();\n    }\n    onGutterTouchStart(event, index) {\n        if (event.cancelable) {\n            this.resizeStart(event, index);\n            this.bindTouchListeners();\n            event.preventDefault();\n        }\n    }\n    onGutterTouchMove(event) {\n        this.onResize(event);\n        event.preventDefault();\n    }\n    onGutterTouchEnd(event) {\n        this.resizeEnd(event);\n        this.unbindTouchListeners();\n        if (event.cancelable)\n            event.preventDefault();\n    }\n    repeat(event, index, step) {\n        this.resizeStart(event, index, true);\n        this.onResize(event, step, true);\n    }\n    setTimer(event, index, step) {\n        this.clearTimer();\n        this.timer = setTimeout(() => {\n            this.repeat(event, index, step);\n        }, 40);\n    }\n    clearTimer() {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n    }\n    onGutterKeyUp(event) {\n        this.clearTimer();\n        this.resizeEnd(event);\n    }\n    onGutterKeyDown(event, index) {\n        switch (event.code) {\n            case 'ArrowLeft': {\n                if (this.layout === 'horizontal') {\n                    this.setTimer(event, index, this.step * -1);\n                }\n                event.preventDefault();\n                break;\n            }\n            case 'ArrowRight': {\n                if (this.layout === 'horizontal') {\n                    this.setTimer(event, index, this.step);\n                }\n                event.preventDefault();\n                break;\n            }\n            case 'ArrowDown': {\n                if (this.layout === 'vertical') {\n                    this.setTimer(event, index, this.step * -1);\n                }\n                event.preventDefault();\n                break;\n            }\n            case 'ArrowUp': {\n                if (this.layout === 'vertical') {\n                    this.setTimer(event, index, this.step);\n                }\n                event.preventDefault();\n                break;\n            }\n            default:\n                //no op\n                break;\n        }\n    }\n    validateResize(newPrevPanelSize, newNextPanelSize) {\n        if (this.minSizes.length >= 1 && this.minSizes[0] && this.minSizes[0] > newPrevPanelSize) {\n            return false;\n        }\n        if (this.minSizes.length > 1 && this.minSizes[1] && this.minSizes[1] > newNextPanelSize) {\n            return false;\n        }\n        return true;\n    }\n    bindMouseListeners() {\n        if (!this.mouseMoveListener) {\n            this.mouseMoveListener = this.renderer.listen(this.document, 'mousemove', (event) => {\n                this.onResize(event);\n            });\n        }\n        if (!this.mouseUpListener) {\n            this.mouseUpListener = this.renderer.listen(this.document, 'mouseup', (event) => {\n                this.resizeEnd(event);\n                this.unbindMouseListeners();\n            });\n        }\n    }\n    bindTouchListeners() {\n        if (!this.touchMoveListener) {\n            this.touchMoveListener = this.renderer.listen(this.document, 'touchmove', (event) => {\n                this.onResize(event.changedTouches[0]);\n            });\n        }\n        if (!this.touchEndListener) {\n            this.touchEndListener = this.renderer.listen(this.document, 'touchend', (event) => {\n                this.resizeEnd(event);\n                this.unbindTouchListeners();\n            });\n        }\n    }\n    unbindMouseListeners() {\n        if (this.mouseMoveListener) {\n            this.mouseMoveListener();\n            this.mouseMoveListener = null;\n        }\n        if (this.mouseUpListener) {\n            this.mouseUpListener();\n            this.mouseUpListener = null;\n        }\n    }\n    unbindTouchListeners() {\n        if (this.touchMoveListener) {\n            this.touchMoveListener();\n            this.touchMoveListener = null;\n        }\n        if (this.touchEndListener) {\n            this.touchEndListener();\n            this.touchEndListener = null;\n        }\n    }\n    clear() {\n        this.dragging = false;\n        this.size = null;\n        this.startPos = null;\n        this.prevPanelElement = null;\n        this.nextPanelElement = null;\n        this.prevPanelSize = null;\n        this.nextPanelSize = null;\n        this.gutterElement = null;\n        this.prevPanelIndex = null;\n    }\n    isNested() {\n        if (this.el.nativeElement) {\n            let parent = this.el.nativeElement.parentElement;\n            while (parent && !DomHandler.hasClass(parent, 'p-splitter')) {\n                parent = parent.parentElement;\n            }\n            return parent !== null;\n        }\n        else {\n            return false;\n        }\n    }\n    isStateful() {\n        return this.stateKey != null;\n    }\n    getStorage() {\n        if (isPlatformBrowser(this.platformId)) {\n            switch (this.stateStorage) {\n                case 'local':\n                    return this.window.localStorage;\n                case 'session':\n                    return this.window.sessionStorage;\n                default:\n                    throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n            }\n        }\n        else {\n            throw new Error('Storage is not a available by default on the server.');\n        }\n    }\n    saveState() {\n        this.getStorage().setItem(this.stateKey, JSON.stringify(this._panelSizes));\n    }\n    restoreState() {\n        const storage = this.getStorage();\n        const stateString = storage.getItem(this.stateKey);\n        if (stateString) {\n            this._panelSizes = JSON.parse(stateString);\n            let children = [...this.containerViewChild.nativeElement.children].filter((child) => DomHandler.hasClass(child, 'p-splitter-panel'));\n            children.forEach((child, i) => {\n                child.style.flexBasis = 'calc(' + this._panelSizes[i] + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n            });\n            return true;\n        }\n        return false;\n    }\n    containerClass() {\n        return {\n            'p-splitter p-component': true,\n            'p-splitter-horizontal': this.layout === 'horizontal',\n            'p-splitter-vertical': this.layout === 'vertical'\n        };\n    }\n    panelContainerClass() {\n        return {\n            'p-splitter-panel': true,\n            'p-splitter-panel-nested': true\n        };\n    }\n    gutterStyle() {\n        if (this.horizontal())\n            return { width: this.gutterSize + 'px' };\n        else\n            return { height: this.gutterSize + 'px' };\n    }\n    horizontal() {\n        return this.layout === 'horizontal';\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: Splitter, deps: [{ token: DOCUMENT }, { token: PLATFORM_ID }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.2\", type: Splitter, selector: \"p-splitter\", inputs: { styleClass: \"styleClass\", panelStyleClass: \"panelStyleClass\", style: \"style\", panelStyle: \"panelStyle\", stateStorage: \"stateStorage\", stateKey: \"stateKey\", layout: \"layout\", gutterSize: \"gutterSize\", step: \"step\", minSizes: \"minSizes\", panelSizes: \"panelSizes\" }, outputs: { onResizeEnd: \"onResizeEnd\", onResizeStart: \"onResizeStart\" }, host: { properties: { \"class.p-splitter-panel-nested\": \"nested\" }, classAttribute: \"p-element\" }, queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"containerViewChild\", first: true, predicate: [\"container\"], descendants: true }], ngImport: i0, template: `\n        <div #container [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\" [attr.data-pc-name]=\"'splitter'\" [attr.data-p-gutter-resizing]=\"false\" [attr.data-pc-section]=\"'root'\">\n            <ng-template ngFor let-panel [ngForOf]=\"panels\" let-i=\"index\">\n                <div [ngClass]=\"panelContainerClass()\" [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\" tabindex=\"-1\" [attr.data-pc-name]=\"'splitter'\" [attr.data-pc-section]=\"'root'\">\n                    <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\n                </div>\n                <div\n                    *ngIf=\"i !== panels.length - 1\"\n                    class=\"p-splitter-gutter\"\n                    role=\"seperator\"\n                    tabindex=\"-1\"\n                    (mousedown)=\"onGutterMouseDown($event, i)\"\n                    (touchstart)=\"onGutterTouchStart($event, i)\"\n                    (touchmove)=\"onGutterTouchMove($event)\"\n                    (touchend)=\"onGutterTouchEnd($event, i)\"\n                    [attr.data-p-gutter-resizing]=\"false\"\n                    [attr.data-pc-section]=\"'gutter'\"\n                >\n                    <div\n                        class=\"p-splitter-gutter-handle\"\n                        tabindex=\"0\"\n                        [ngStyle]=\"gutterStyle()\"\n                        [attr.aria-orientation]=\"layout\"\n                        [attr.aria-valuenow]=\"prevSize\"\n                        [attr.data-pc-section]=\"'gutterhandle'\"\n                        (keyup)=\"onGutterKeyUp($event)\"\n                        (keydown)=\"onGutterKeyDown($event, i)\"\n                    ></div>\n                </div>\n            </ng-template>\n        </div>\n    `, isInline: true, styles: [\".p-splitter{display:flex;flex-wrap:nowrap}.p-splitter-vertical{flex-direction:column}.p-splitter-panel{flex-grow:1}.p-splitter-panel-nested{display:flex}.p-splitter-panel p-splitter{flex-grow:1}.p-splitter-panel .p-splitter{flex-grow:1;border:0 none}.p-splitter-gutter{flex-grow:0;flex-shrink:0;display:flex;align-items:center;justify-content:center;cursor:col-resize}.p-splitter-horizontal.p-splitter-resizing{cursor:col-resize;-webkit-user-select:none;user-select:none}.p-splitter-horizontal>.p-splitter-gutter>.p-splitter-gutter-handle{height:24px;width:100%}.p-splitter-horizontal>.p-splitter-gutter{cursor:col-resize}.p-splitter-vertical.p-splitter-resizing{cursor:row-resize;-webkit-user-select:none;user-select:none}.p-splitter-vertical>.p-splitter-gutter{cursor:row-resize}.p-splitter-vertical>.p-splitter-gutter>.p-splitter-gutter-handle{width:24px;height:100%}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: Splitter, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-splitter', template: `\n        <div #container [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\" [attr.data-pc-name]=\"'splitter'\" [attr.data-p-gutter-resizing]=\"false\" [attr.data-pc-section]=\"'root'\">\n            <ng-template ngFor let-panel [ngForOf]=\"panels\" let-i=\"index\">\n                <div [ngClass]=\"panelContainerClass()\" [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\" tabindex=\"-1\" [attr.data-pc-name]=\"'splitter'\" [attr.data-pc-section]=\"'root'\">\n                    <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\n                </div>\n                <div\n                    *ngIf=\"i !== panels.length - 1\"\n                    class=\"p-splitter-gutter\"\n                    role=\"seperator\"\n                    tabindex=\"-1\"\n                    (mousedown)=\"onGutterMouseDown($event, i)\"\n                    (touchstart)=\"onGutterTouchStart($event, i)\"\n                    (touchmove)=\"onGutterTouchMove($event)\"\n                    (touchend)=\"onGutterTouchEnd($event, i)\"\n                    [attr.data-p-gutter-resizing]=\"false\"\n                    [attr.data-pc-section]=\"'gutter'\"\n                >\n                    <div\n                        class=\"p-splitter-gutter-handle\"\n                        tabindex=\"0\"\n                        [ngStyle]=\"gutterStyle()\"\n                        [attr.aria-orientation]=\"layout\"\n                        [attr.aria-valuenow]=\"prevSize\"\n                        [attr.data-pc-section]=\"'gutterhandle'\"\n                        (keyup)=\"onGutterKeyUp($event)\"\n                        (keydown)=\"onGutterKeyDown($event, i)\"\n                    ></div>\n                </div>\n            </ng-template>\n        </div>\n    `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        class: 'p-element',\n                        '[class.p-splitter-panel-nested]': 'nested'\n                    }, styles: [\".p-splitter{display:flex;flex-wrap:nowrap}.p-splitter-vertical{flex-direction:column}.p-splitter-panel{flex-grow:1}.p-splitter-panel-nested{display:flex}.p-splitter-panel p-splitter{flex-grow:1}.p-splitter-panel .p-splitter{flex-grow:1;border:0 none}.p-splitter-gutter{flex-grow:0;flex-shrink:0;display:flex;align-items:center;justify-content:center;cursor:col-resize}.p-splitter-horizontal.p-splitter-resizing{cursor:col-resize;-webkit-user-select:none;user-select:none}.p-splitter-horizontal>.p-splitter-gutter>.p-splitter-gutter-handle{height:24px;width:100%}.p-splitter-horizontal>.p-splitter-gutter{cursor:col-resize}.p-splitter-vertical.p-splitter-resizing{cursor:row-resize;-webkit-user-select:none;user-select:none}.p-splitter-vertical>.p-splitter-gutter{cursor:row-resize}.p-splitter-vertical>.p-splitter-gutter>.p-splitter-gutter-handle{width:24px;height:100%}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { styleClass: [{\n                type: Input\n            }], panelStyleClass: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], panelStyle: [{\n                type: Input\n            }], stateStorage: [{\n                type: Input\n            }], stateKey: [{\n                type: Input\n            }], layout: [{\n                type: Input\n            }], gutterSize: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], minSizes: [{\n                type: Input\n            }], panelSizes: [{\n                type: Input\n            }], onResizeEnd: [{\n                type: Output\n            }], onResizeStart: [{\n                type: Output\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], containerViewChild: [{\n                type: ViewChild,\n                args: ['container', { static: false }]\n            }] } });\nclass SplitterModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: SplitterModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.2\", ngImport: i0, type: SplitterModule, declarations: [Splitter], imports: [CommonModule], exports: [Splitter, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: SplitterModule, imports: [CommonModule, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: SplitterModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [Splitter, SharedModule],\n                    declarations: [Splitter]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Splitter, SplitterModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}